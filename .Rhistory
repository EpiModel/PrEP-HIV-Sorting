reclass[[i]]$prep.reclass.n <- table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp)
reclass[[i]]$prep.reclass.p <- prop.table(table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp), 1)
# HIV prevalence among egos, given partner is HIV -/?
reclass[[i]]$ehiv.pneg.n <- table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0])
reclass[[i]]$ehiv.pneg.p <- prop.table(table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0]))
# HIV-PrEP sorting
reclass[[i]]$hp.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp)
reclass[[i]]$hp.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp),1)
# PrEP prevalence among egos, given partner is HIV -/?
reclass[[i]]$eprep.pneg.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0])
reclass[[i]]$eprep.pneg.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0]))
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$pp.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]), 1)
}
a <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0) %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0, prep.during.ego2 == "No") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0, prep.during.ego2 == "Yes") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
d <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0) %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t5.w <- rbind(
cbind("Whole Sample", "", "", "", "", "", "", "", ""),
cbind("No PrEP", a$n[1], a$perc[1], b$n[1], b$perc[1], b$n[2], b$perc[2], b$n[3], b$perc[3]),
cbind("PrEP", a$n[2], a$perc[2], c$n[1], c$perc[1], c$n[2], c$perc[2], c$n[3], c$perc[3]),
cbind("Total", sum(a$n), sum(a$perc), d$n[1], d$perc[1], d$n[2], d$perc[2], d$n[3], d$perc[3])
)
# Complete Case - partners are HIV negative and known PrEP use
a <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0) %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0, prep.during.ego2 == "No") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0, prep.during.ego2 == "Yes") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
d <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0) %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t5.c <- rbind(
cbind("Complete-case", "", "", "", "", "", "", "", ""),
cbind("No PrEP", a$n[1], a$perc[1], b$n[1], b$perc[1], b$n[2], b$perc[2], "", ""),
cbind("PrEP", a$n[2], a$perc[2], c$n[1], c$perc[1], c$n[2], c$perc[2], "", ""),
cbind("Total", sum(a$n), sum(a$perc), d$n[1], d$perc[1], d$n[2], d$perc[2], "", "")
)
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
b <- results(dat = reclass.results, x = "eprep.pneg.p")
c <- results(dat = reclass.results, x = "pp.sort.n")
d <- results(dat = reclass.results, x = "pp.sort.p")
a
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
a
table(dfs[[1]]$prep.during.ego2[dfs[[1]]$p_hiv.imp == 0 & dfs[[1]]$hiv2 == 0])
listVec <- lapply(reclass, c, recursive=TRUE)
reclass.results <- as.data.frame(do.call(rbind, listVec))
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
b <- results(dat = reclass.results, x = "eprep.pneg.p")
c <- results(dat = reclass.results, x = "pp.sort.n")
d <- results(dat = reclass.results, x = "pp.sort.p")
a
c
a
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
b <- results(dat = reclass.results, x = "eprep.pneg.p")
c <- results(dat = reclass.results, x = "pp.sort.n")
d <- results(dat = reclass.results, x = "pp.sort.p")
e <- results(dat = reclass.results, x = "eprep.pneg.n")
e
e <- results(dat = reclass.results, x = "ehiv.pneg.n")
e
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
}
table(dfs[[1]]$prep.during.ego2[dfs[[1]]$hiv2 == 0], dfs[[1]]$prep.imp[dfs[[1]]$hiv2 == 0], useNA = "ifany")
table(dfs[[1]]$prep.during.ego2[dfs[[1]]$hiv2 == 0], dfs[[1]]$p_hiv.imp[dfs[[1]]$hiv2 == 0], useNA = "ifany")
}
### Reclassification analysis ----
reclass <- vector("list", 100)
for (i in seq_along(1:100)) {
# HIV prevalence
reclass[[i]]$hiv.imp.n <- table(dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.imp.p <- prop.table(table(dfs[[i]]$p_hiv.imp))
# HIV reclassification
reclass[[i]]$hiv.reclass.n <- table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.reclass.p <- prop.table(table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp), 1)
# HIV-HIV sorting
reclass[[i]]$hh.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hh.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp), 1)
# PrEP prevalence, given neg/unk
reclass[[i]]$prep.imp.n <- table(dfs[[i]]$prep.imp)
reclass[[i]]$prep.imp.p <- prop.table(table(dfs[[i]]$prep.imp))
# PrEP reclassification
reclass[[i]]$prep.reclass.n <- table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp)
reclass[[i]]$prep.reclass.p <- prop.table(table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp), 1)
# HIV prevalence among egos, given partner is HIV -/?
reclass[[i]]$ehiv.pneg.n <- table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0])
reclass[[i]]$ehiv.pneg.p <- prop.table(table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0]))
# HIV-PrEP sorting
reclass[[i]]$hp.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp)
reclass[[i]]$hp.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp),1)
# PrEP prevalence among egos, given partner is HIV -/?
reclass[[i]]$eprep.pneg.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0])
reclass[[i]]$eprep.pneg.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0]))
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$pp.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]), 1)
# PrEP prevalence among partners, where ego is HIV negative/unknown
reclass[[i]]$prep.imp.eneg.n <- table(dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$prep.imp.eneg.pp <- prop.table(table(dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]))
}
listVec <- lapply(reclass, c, recursive=TRUE)
reclass.results <- as.data.frame(do.call(rbind, listVec))
results <- function(dat, x) {
q <- select(dat, starts_with(x))
return(t(apply(q, 2, quantile, probs = c(0.025, 0.5, 0.975), na.rm = FALSE)))
}
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
b <- results(dat = reclass.results, x = "eprep.pneg.p")
c <- results(dat = reclass.results, x = "pp.sort.n")
d <- results(dat = reclass.results, x = "pp.sort.p")
e <- results(dat = reclass.results, x = "ehiv.pneg.n")
f <- results(dat = reclass.results, x = "hp.sort.n")
g <- results(dat = reclass.results, x = "hp.sort.p")
f
f
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
b <- results(dat = reclass.results, x = "eprep.pneg.p")
c <- results(dat = reclass.results, x = "pp.sort.n")
d <- results(dat = reclass.results, x = "pp.sort.p")
e <- results(dat = reclass.results, x = "ehiv.pneg.n")
f <- results(dat = reclass.results, x = "hp.sort.n")
g <- results(dat = reclass.results, x = "hp.sort.p")
t5.r <- rbind(
cbind("Reclassification", "", "", "", "", "", "", "", ""),
cbind("No PrEP", "", "", "", "", "", "", "", ""),
cbind("Median", round(a[1,2]), round(100*b[1,2],1), round(c[1,2]), round(100*d[1,2],1), round(c[3,2]), round(100*d[3,2],1), "", ""),
cbind("95% interval", paste0("(",round(a[1,1]),", ", round(a[1,3]), ")"), paste0("(",round(100*b[1,1],1),", ",round(100*b[1,3],1), ")"), paste0("(",round(c[1,1]),", ", round(c[1,3]), ")"), paste0("(",round(100*d[1,1],1),", ",round(100*d[1,3],1), ")"), paste0("(",round(c[3,1]),", ", round(c[3,3]), ")"), paste0("(",round(100*d[3,1],1),", ",round(100*d[3,3],1), ")"), "", ""),
cbind("PrEP", "", "", "", "", "", "", "", ""),
cbind("Median", round(a[2,2]), round(100*b[2,2],1), round(c[2,2]), round(100*d[2,2],1), round(c[4,2]), round(100*d[4,2],1), "", ""),
cbind("95% interval", paste0("(",round(a[2,1]),", ", round(a[2,3]), ")"), paste0("(",round(100*b[2,1],1),", ",round(100*b[2,3],1), ")"), paste0("(",round(c[2,1]),", ", round(c[2,3]), ")"), paste0("(",round(100*d[2,1],1),", ",round(100*d[2,3],1), ")"), paste0("(",round(c[4,1]),", ", round(c[4,3]), ")"), paste0("(",round(100*d[4,1],1),", ",round(100*d[4,3],1), ")"), "", ""),
cbind("Total", "", "", "", "", "", "", "", ""),
cbind("Median", round(e[1,2]), 100, round(f[1,2]), round(100*g[1,2],1), round(f[3,2]), round(100*g[3,2],1), "", ""),
cbind("95% interval", paste0("(",round(e[1,1]),", ", round(e[1,3]), ")"), "(1, 1)", paste0("(",round(f[1,1]),", ", round(f[1,3]), ")"), paste0("(",round(100*g[1,1],1),", ",round(100*g[1,3],1), ")"), paste0("(",round(f[2,1]),", ", round(f[2,3]), ")"), paste0("(",round(100*g[2,1],1),", ",round(100*g[2,3],1), ")"), "", "")
)
t5.r
t5.title <- vector("character", 9)
t5.title[1] <- "Table 5. HIV-PrEP Sorting"
t5.colname.a <- vector("character", 9)
t5.colname.a[4] <- "Partners"
t5.colname.b <- c("", "Total, dyad-level", "", "No PrEP", "", "PrEP", "", "PrEP unknown", "")
t5.colname.c <- c("Respondents", "N", "Column %", "N", "Row %", "N", "Row %", "N", "Row %")
# Whole sample - egos and partners are HIV -/?
a <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0) %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0, prep.during.ego2 == "No") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0, prep.during.ego2 == "Yes") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
d <- artnetSort %>% filter(!p_hiv == "Pos", hiv2 == 0) %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t5.w <- rbind(
cbind("Whole Sample", "", "", "", "", "", "", "", ""),
cbind("No PrEP", a$n[1], a$perc[1], b$n[1], b$perc[1], b$n[2], b$perc[2], b$n[3], b$perc[3]),
cbind("PrEP", a$n[2], a$perc[2], c$n[1], c$perc[1], c$n[2], c$perc[2], c$n[3], c$perc[3]),
cbind("Total", sum(a$n), sum(a$perc), d$n[1], d$perc[1], d$n[2], d$perc[2], d$n[3], d$perc[3])
)
# Complete Case - partners are HIV negative and known PrEP use
a <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0) %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0, prep.during.ego2 == "No") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0, prep.during.ego2 == "Yes") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
d <- artnetSort %>% filter(p_hiv == "Neg", !prep.during.part2 == "Unk", hiv2 == 0) %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t5.c <- rbind(
cbind("Complete-case", "", "", "", "", "", "", "", ""),
cbind("No PrEP", a$n[1], a$perc[1], b$n[1], b$perc[1], b$n[2], b$perc[2], "", ""),
cbind("PrEP", a$n[2], a$perc[2], c$n[1], c$perc[1], c$n[2], c$perc[2], "", ""),
cbind("Total", sum(a$n), sum(a$perc), d$n[1], d$perc[1], d$n[2], d$perc[2], "", "")
)
# Reclassification
a <- results(dat = reclass.results, x = "eprep.pneg.n")
b <- results(dat = reclass.results, x = "eprep.pneg.p")
c <- results(dat = reclass.results, x = "pp.sort.n")
d <- results(dat = reclass.results, x = "pp.sort.p")
e <- results(dat = reclass.results, x = "ehiv.pneg.n")
f <- results(dat = reclass.results, x = "hp.sort.n")
g <- results(dat = reclass.results, x = "hp.sort.p")
t5.r <- rbind(
cbind("Reclassification", "", "", "", "", "", "", "", ""),
cbind("No PrEP", "", "", "", "", "", "", "", ""),
cbind("Median", round(a[1,2]), round(100*b[1,2],1), round(c[1,2]), round(100*d[1,2],1), round(c[3,2]), round(100*d[3,2],1), "", ""),
cbind("95% interval", paste0("(",round(a[1,1]),", ", round(a[1,3]), ")"), paste0("(",round(100*b[1,1],1),", ",round(100*b[1,3],1), ")"), paste0("(",round(c[1,1]),", ", round(c[1,3]), ")"), paste0("(",round(100*d[1,1],1),", ",round(100*d[1,3],1), ")"), paste0("(",round(c[3,1]),", ", round(c[3,3]), ")"), paste0("(",round(100*d[3,1],1),", ",round(100*d[3,3],1), ")"), "", ""),
cbind("PrEP", "", "", "", "", "", "", "", ""),
cbind("Median", round(a[2,2]), round(100*b[2,2],1), round(c[2,2]), round(100*d[2,2],1), round(c[4,2]), round(100*d[4,2],1), "", ""),
cbind("95% interval", paste0("(",round(a[2,1]),", ", round(a[2,3]), ")"), paste0("(",round(100*b[2,1],1),", ",round(100*b[2,3],1), ")"), paste0("(",round(c[2,1]),", ", round(c[2,3]), ")"), paste0("(",round(100*d[2,1],1),", ",round(100*d[2,3],1), ")"), paste0("(",round(c[4,1]),", ", round(c[4,3]), ")"), paste0("(",round(100*d[4,1],1),", ",round(100*d[4,3],1), ")"), "", ""),
cbind("Total", "", "", "", "", "", "", "", ""),
cbind("Median", round(e[1,2]), 100, round(f[1,2]), round(100*g[1,2],1), round(f[3,2]), round(100*g[3,2],1), "", ""),
cbind("95% interval", paste0("(",round(e[1,1]),", ", round(e[1,3]), ")"), "(1, 1)", paste0("(",round(f[1,1]),", ", round(f[1,3]), ")"), paste0("(",round(100*g[1,1],1),", ",round(100*g[1,3],1), ")"), paste0("(",round(f[2,1]),", ", round(f[2,3]), ")"), paste0("(",round(100*g[2,1],1),", ",round(100*g[2,3],1), ")"), "", "")
)
table5 <- rbind(t5.title, t5.colname.a, t5.colname.b, t5.colname.c, t5.w, t5.c, t5.r)
write.csv(table5, file = "aim1_table5_PP.csv")
g
t5.r <- rbind(
cbind("Reclassification", "", "", "", "", "", "", "", ""),
cbind("No PrEP", "", "", "", "", "", "", "", ""),
cbind("Median", round(a[1,2]), round(100*b[1,2],1), round(c[1,2]), round(100*d[1,2],1), round(c[3,2]), round(100*d[3,2],1), "", ""),
cbind("95% interval", paste0("(",round(a[1,1]),", ", round(a[1,3]), ")"), paste0("(",round(100*b[1,1],1),", ",round(100*b[1,3],1), ")"), paste0("(",round(c[1,1]),", ", round(c[1,3]), ")"), paste0("(",round(100*d[1,1],1),", ",round(100*d[1,3],1), ")"), paste0("(",round(c[3,1]),", ", round(c[3,3]), ")"), paste0("(",round(100*d[3,1],1),", ",round(100*d[3,3],1), ")"), "", ""),
cbind("PrEP", "", "", "", "", "", "", "", ""),
cbind("Median", round(a[2,2]), round(100*b[2,2],1), round(c[2,2]), round(100*d[2,2],1), round(c[4,2]), round(100*d[4,2],1), "", ""),
cbind("95% interval", paste0("(",round(a[2,1]),", ", round(a[2,3]), ")"), paste0("(",round(100*b[2,1],1),", ",round(100*b[2,3],1), ")"), paste0("(",round(c[2,1]),", ", round(c[2,3]), ")"), paste0("(",round(100*d[2,1],1),", ",round(100*d[2,3],1), ")"), paste0("(",round(c[4,1]),", ", round(c[4,3]), ")"), paste0("(",round(100*d[4,1],1),", ",round(100*d[4,3],1), ")"), "", ""),
cbind("Total", "", "", "", "", "", "", "", ""),
cbind("Median", round(e[1,2]), 100, round(f[1,2]), round(100*g[1,2],1), round(f[3,2]), round(100*g[3,2],1), "", ""),
cbind("95% interval", paste0("(",round(e[1,1]),", ", round(e[1,3]), ")"), "(1, 1)", paste0("(",round(f[1,1]),", ", round(f[1,3]), ")"), paste0("(",round(100*g[1,1],1),", ",round(100*g[1,3],1), ")"), paste0("(",round(f[3,1]),", ", round(f[3,3]), ")"), paste0("(",round(100*g[3,1],1),", ",round(100*g[3,3],1), ")"), "", "")
)
table5 <- rbind(t5.title, t5.colname.a, t5.colname.b, t5.colname.c, t5.w, t5.c, t5.r)
table5 <- rbind(t5.title, t5.colname.a, t5.colname.b, t5.colname.c, t5.w, t5.c, t5.r)
write.csv(table5, file = "aim1_table5_PP.csv")
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
IDs <- artnetSort %>% select(AMIS_ID)
IDs <- artnetSort %>% select(AMIS_ID) %>% unique(AMIS_ID)
IDs <- artnetSort %>% select(AMIS_ID) %>% unique()
View(IDs)
View(artnetSort)
t1_egos <- left_join(IDs, artnet, by = "AMIS_ID")
left_join(IDs, artnet, by = "AMIS_ID")
table(t1_egos$age.cat, useNA = "ifany")
# Age Category
a <- t1_egos %>% count(age.cat)
b <- artnetSort %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
View(a)
# Age Category
a <- t1_egos %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
View(a)
b <- artnetSort %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
View(b)
c <- artnetSort %>% count(p_age.cat_imp) %>% mutate(perc = round(100*n/sum(n), 1))
b
a <- t1_egos %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_age.cat_imp) %>% mutate(perc = round(100*n/sum(n), 1))
t1.age <- rbind(
cbind("Age category", "", "", "", "", "", ""),
cbind("15-24", a$n[1], a$perc[1], b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("25-34", a$n[2], a$perc[2], b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("35-44", a$n[3], a$perc[3], b$n[3], b$perc[3], c$n[3], c$perc[3]),
cbind("45-54", a$n[4], a$perc[4], b$n[4], b$perc[4], c$n[4], c$perc[4]),
cbind("55-65", a$n[5], a$perc[5], b$n[5], b$perc[5], c$n[5], c$perc[5]),
cbind("66+", "0", "---", "0", "---", c$n[6], c$perc[6])
)
View(t1.age)
names(artnetSort)
# Race/ethnicity
a <- t1_egos %>% count(race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
a
s
b
c
a <- t1_egos %>% count(race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
t1.race <- rbind(
cbind("Race/ ethnicity", "", "", "", "", "", ""),
cbind("Non-Hispanic black", a$n[1], a$perc[1], b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Non-Hispanic white", a$n[4], a$perc[4], b$n[4], b$perc[4], c$n[4], c$perc[4]),
cbind("Hispanic/ Latinx", a$n[2], a$perc[2], b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Other", a$n[3], a$perc[3], b$n[3], b$perc[3], c$n[3], c$perc[3])
)
t1.race
# HIV
a <- t1_egos %>% count(hiv3) %>% mutate(perc = round(100*n/sum(n), 1))
a
c
# HIV
a <- t1_egos %>% count(hiv3) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(hiv3) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_hiv) %>% mutate(perc = round(100*n/sum(n), 1))
c
t1.hiv <- rbind(
cbind("HIV status", "", "", "", "", "", ""),
cbind("Negative", a$n[1], a$perc[1], b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Diagnosed HIV", a$n[2], a$perc[2], b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Unknown HIV", a$n[3], a$perc[3], b$n[3], b$perc[3], c$n[3], c$perc[3])
)
t1.hiv
table(artnetSort$hiv3, artnetSort$prep.during.ego2, useNA = "ifany")
# PrEP
b <- artnetSort %>% filter(hiv3 == "Neg") %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
b
table(artnetSort$p_hiv, artnetSort$prep.during.part2, useNA = "ifany")
c <- artnetSort %>% filter(!p_hiv == "Pos") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
c
# PrEP
b <- artnetSort %>% filter(!hiv3 == "Pos") %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
# PrEP
b <- artnetSort %>% filter(!hiv3 == "Pos") %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
b
c
b <- artnetSort %>% filter(!hiv3 == "Pos") %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t1.prep <- rbind(
cbind("PrEP use during partnership", "", "", "", "", "", ""),
cbind("Never", "---", "---", b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Ever", "---", "---", b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Unknown", "---", "---", "---", "---", c$n[3], c$perc[3])
)
t1.prep
# Partnership type
c <- artnetSort %>% count(ptype) %>% mutate(perc = round(100*n/sum(n), 1))
c
t1.prep <- rbind(
cbind("Partnership type", "", "", "", "", "", ""),
cbind("Main", "---", "---", "---", "---", c$n[1], c$perc[1]),
cbind("Casual", "---", "---", "---", "---", c$n[2], c$perc[2]),
cbind("One-time", "---", "---", "---", "---", c$n[3], c$perc[3])
)
b <- artnetSort %>% filter(!hiv3 == "Pos") %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t1.prep <- rbind(
cbind("PrEP use during partnership", "", "", "", "", "", ""),
cbind("Never", "---", "---", b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Ever", "---", "---", b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Unknown", "---", "---", "---", "---", c$n[3], c$perc[3])
)
# Partnership type
c <- artnetSort %>% count(ptype) %>% mutate(perc = round(100*n/sum(n), 1))
t1.ptype <- rbind(
cbind("Partnership type", "", "", "", "", "", ""),
cbind("Main", "---", "---", "---", "---", c$n[1], c$perc[1]),
cbind("Casual", "---", "---", "---", "---", c$n[2], c$perc[2]),
cbind("One-time", "---", "---", "---", "---", c$n[3], c$perc[3])
)
t1.ptype
t1.title <- vector("character", 7)
t1.title[1] <- "Table 1. Sample Characteristics"
t1.groupname <- vector("character", 7)
t1.groupname[2] <- "Respondent-level"
t1.groupname[4] <- "Partnership-level"
t1.colname <- c("Category", "Respondents N", "Respondents %", "Respondents N", "Respondents %", "Partners N", "Partners %")
# Total Sample
t1.total <- cbind("Total",
nrow(t1_egos), nrow(t1_egos) / nrow(t1_egos),
nrow(artnetLong), nrow(artnetLong) / nrow(artnetLong),
nrow(artnetLong), nrow(artnetLong) / nrow(artnetLong)
)
# Age Category
a <- t1_egos %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(age.cat) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_age.cat_imp) %>% mutate(perc = round(100*n/sum(n), 1))
t1.age <- rbind(
cbind("Age category", "", "", "", "", "", ""),
cbind("15-24", a$n[1], a$perc[1], b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("25-34", a$n[2], a$perc[2], b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("35-44", a$n[3], a$perc[3], b$n[3], b$perc[3], c$n[3], c$perc[3]),
cbind("45-54", a$n[4], a$perc[4], b$n[4], b$perc[4], c$n[4], c$perc[4]),
cbind("55-65", a$n[5], a$perc[5], b$n[5], b$perc[5], c$n[5], c$perc[5]),
cbind("66+", "0", "---", "0", "---", c$n[6], c$perc[6])
)
# Race/ethnicity
a <- t1_egos %>% count(race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_race.cat) %>% mutate(perc = round(100*n/sum(n), 1))
t1.race <- rbind(
cbind("Race/ ethnicity", "", "", "", "", "", ""),
cbind("Non-Hispanic black", a$n[1], a$perc[1], b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Non-Hispanic white", a$n[4], a$perc[4], b$n[4], b$perc[4], c$n[4], c$perc[4]),
cbind("Hispanic/ Latinx", a$n[2], a$perc[2], b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Other", a$n[3], a$perc[3], b$n[3], b$perc[3], c$n[3], c$perc[3])
)
# HIV
a <- t1_egos %>% count(hiv3) %>% mutate(perc = round(100*n/sum(n), 1))
b <- artnetSort %>% count(hiv3) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% count(p_hiv) %>% mutate(perc = round(100*n/sum(n), 1))
t1.hiv <- rbind(
cbind("HIV status", "", "", "", "", "", ""),
cbind("Negative", a$n[1], a$perc[1], b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Diagnosed HIV", a$n[2], a$perc[2], b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Unknown HIV", a$n[3], a$perc[3], b$n[3], b$perc[3], c$n[3], c$perc[3])
)
# PrEP
b <- artnetSort %>% filter(!hiv3 == "Pos") %>% count(prep.during.ego2) %>% mutate(perc = round(100*n/sum(n), 1))
c <- artnetSort %>% filter(!p_hiv == "Pos") %>% count(prep.during.part2) %>% mutate(perc = round(100*n/sum(n), 1))
t1.prep <- rbind(
cbind("PrEP use during partnership", "", "", "", "", "", ""),
cbind("Never", "---", "---", b$n[1], b$perc[1], c$n[1], c$perc[1]),
cbind("Ever", "---", "---", b$n[2], b$perc[2], c$n[2], c$perc[2]),
cbind("Unknown", "---", "---", "---", "---", c$n[3], c$perc[3])
)
# Partnership type
c <- artnetSort %>% count(ptype) %>% mutate(perc = round(100*n/sum(n), 1))
t1.ptype <- rbind(
cbind("Partnership type", "", "", "", "", "", ""),
cbind("Main", "---", "---", "---", "---", c$n[1], c$perc[1]),
cbind("Casual", "---", "---", "---", "---", c$n[2], c$perc[2]),
cbind("One-time", "---", "---", "---", "---", c$n[3], c$perc[3])
)
table1 <- rbind(t1.title, t1.groupname, t1.colname, t1.total, t1.age, t1.race, t1.hiv, t1.prep, t1.ptype)
write.csv(table1, file = "aim1_table1.csv")
write.csv(table1, file = "aim1_table1.csv")
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
library("INLA")
#### Long df ----
artnetSort1 <- artnetLong %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
## Unique ID for each alter
artnetSort1$alter_id <- seq(1:nrow(artnetSort1))
# Covariates set to factor
artnetSort1$age.cat = factor(artnetSort1$age.cat)
artnetSort1$race.cat = factor(artnetSort1$race.cat)
artnetSort1$ptype = factor(artnetSort1$ptype,  labels = c("Main", "Casual", "Once"))
### Ego level variables
# hiv2: 2 level variable from hiv3
artnetSort1$hiv2[artnetSort1$hiv3 %in% c("Neg","Unk")] <- 0
artnetSort1$hiv2[artnetSort1$hiv3 == "Pos"] <- 1
### Partner level variables
# p_hiv: 2 level (Neg == 0; Pos == 1; Unk == NA)
artnetSort1$p_hiv2 <- as.numeric(artnetSort1$p_hiv)
artnetSort1$p_hiv2 = artnetSort1$p_hiv2 - 1
artnetSort1$p_hiv2[artnetSort1$p_hiv2 == 2] <- NA
#### Imputation models -----
inla.hiv <- inla(p_hiv2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
age.cat + race.cat + age.cat:race.cat +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort1, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
#### Drawing predictive values from posterior distribution ----
p_hiv2.pred.star <- inla.posterior.sample(1, inla.hiv)
View(p_hiv2.pred.star)
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
table(artnet$hiv3, artnet$PREP_EVER)
table(artnet$hiv3, artnet$PREP_EVER, useNA = "ifany")
table(artnetLong$hiv3, artnetLong$prep.ever.ego, useNA = "ifany")
table(artnetLong$hiv3, artnetLong$prep.during.ego, useNA = "ifany")
table(artnetLong$hiv3, artnetLong$prep.during.ego2, useNA = "ifany")
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
# Compiling all reclassification dfs to a list
dfs <- vector("list", 100)
for (i in seq_along(1:100)) {
dfs[[i]] <- readRDS(paste("imp", i, ".rds", sep = ""))
}
### Reclassification analysis ----
reclass <- vector("list", 100)
for (i in seq_along(1:100)) {
# HIV prevalence
reclass[[i]]$hiv.imp.n <- table(dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.imp.p <- prop.table(table(dfs[[i]]$p_hiv.imp))
# HIV reclassification
reclass[[i]]$hiv.reclass.n <- table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.reclass.p <- prop.table(table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp), 1)
# HIV-HIV sorting
reclass[[i]]$hh.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hh.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp), 1)
# PrEP prevalence, given neg/unk
reclass[[i]]$prep.imp.n <- table(dfs[[i]]$prep.imp)
reclass[[i]]$prep.imp.p <- prop.table(table(dfs[[i]]$prep.imp))
# PrEP reclassification
reclass[[i]]$prep.reclass.n <- table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp)
reclass[[i]]$prep.reclass.p <- prop.table(table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp), 1)
# HIV prevalence among egos, given partner is HIV -/?
reclass[[i]]$ehiv.pneg.n <- table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0])
reclass[[i]]$ehiv.pneg.p <- prop.table(table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0]))
# HIV-PrEP sorting
reclass[[i]]$hp.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp)
reclass[[i]]$hp.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp),1)
# PrEP prevalence among egos, given partner is HIV -/?
reclass[[i]]$eprep.pneg.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0])
reclass[[i]]$eprep.pneg.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0]))
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$pp.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]), 1)
# PrEP-HIV sorting
reclass[[i]]$ph.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$ph.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0]), 1)
}
listVec <- lapply(reclass, c, recursive=TRUE)
reclass.results <- as.data.frame(do.call(rbind, listVec))
results <- function(dat, x) {
q <- select(dat, starts_with(x))
return(t(apply(q, 2, quantile, probs = c(0.025, 0.5, 0.975), na.rm = FALSE)))
}
# # PrEP-HIV sorting
results(dat = reclass.results, x = "ph.sort.n")
# # PrEP-HIV sorting
results(dat = reclass.results, x = "ph.sort.n")
results(dat = reclass.results, x = "ph.sort.p")
#
# # HIV prevalence among egos, given partner is HIV -/?
# results(dat = reclass.results, x = "ehiv.pneg.n")
# results(dat = reclass.results, x = "ehiv.pneg.p")
#
# # HIV-PrEP sorting
# results(dat = reclass.results, x = "hp.sort.n")
# results(dat = reclass.results, x = "hp.sort.p")
#
# # PrEP-PrEP sorting
results(dat = reclass.results, x = "pp.sort.n")
#
# # HIV prevalence among egos, given partner is HIV -/?
# results(dat = reclass.results, x = "ehiv.pneg.n")
# results(dat = reclass.results, x = "ehiv.pneg.p")
#
# # HIV-PrEP sorting
# results(dat = reclass.results, x = "hp.sort.n")
# results(dat = reclass.results, x = "hp.sort.p")
#
# # PrEP-PrEP sorting
results(dat = reclass.results, x = "pp.sort.n")
# # PrEP-HIV sorting
results(dat = reclass.results, x = "ph.sort.n")
results(dat = reclass.results, x = "ph.sort.p")
