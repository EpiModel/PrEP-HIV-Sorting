artnetLong$race.cat = factor(artnetLong$race.cat)
artnetLong$p_age.cat_imp = factor(artnetLong$p_age.cat_imp)
artnetLong$p_race.cat = factor(artnetLong$p_race.cat)
typeof(artnetWideSort1$hiv3)
typeof(artnetWideSort2$hiv3)
typeof(artnetSort1$hiv3)
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
typeof(artnetSort1$hiv3)
artnetSort2 <- left_join(artnetSort1, hiv3.egos, by = "AMIS_ID") %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort1 %>% count(hiv3)
artnetSort2 %>% count(hiv3)
# Recoding the 2s as NA
artnetSort1$hiv3[artnetSort1$hiv3 == 2] <- NA
artnetSort2 %>% count(p_hiv)
typeof(artnetSort1$hiv3)
typeof(artnetWideSort1$hiv3)
typeof(artnetWideSort2$hiv3)
artnet <- ARTnet.wide
artnetLong <- ARTnet.long
### Egos
# Age
artnet$age.cat <- rep(NA, nrow(artnet))
artnet$age.cat[artnet$age >= 15 & artnet$age <= 24] <- "15-24"
artnet$age.cat[artnet$age >= 25 & artnet$age <= 34] <- "25-34"
artnet$age.cat[artnet$age >= 35 & artnet$age <= 44] <- "35-44"
artnet$age.cat[artnet$age >= 45 & artnet$age <= 54] <- "45-54"
artnet$age.cat[artnet$age >= 55 & artnet$age <= 65] <- "55-65"
artnet$age.cat[artnet$age > 65] <- "66+"
artnetLong$age.cat <- rep(NA, nrow(artnetLong))
artnetLong$age.cat[artnetLong$age >= 15 & artnetLong$age <= 24] <- "15-24"
artnetLong$age.cat[artnetLong$age >= 25 & artnetLong$age <= 34] <- "25-34"
artnetLong$age.cat[artnetLong$age >= 35 & artnetLong$age <= 44] <- "35-44"
artnetLong$age.cat[artnetLong$age >= 45 & artnetLong$age <= 54] <- "45-54"
artnetLong$age.cat[artnetLong$age >= 55 & artnetLong$age <= 65] <- "55-65"
artnetLong$age.cat[artnetLong$age > 65] <- "66+"
# Education
artnet$education <- rep(NA, nrow(artnet))
artnet$education[artnet$HLEDUCAT %in% c(0, 1, 2)] <- "Less than High School"
artnet$education[artnet$HLEDUCAT == 3] <- "High School Graduate"
artnet$education[artnet$HLEDUCAT == 4] <- "Some College or Associates/Technical"
artnet$education[artnet$HLEDUCAT == 5] <- "College or Greater"
### Long Data Set
# Age --- using imputed age
# Check on what imputed age is & whether this is most appropriate option
artnetLong$p_age.cat_imp <- rep(NA, nrow(artnetLong))
artnetLong$p_age.cat_imp[artnetLong$p_age_imp >= 15 & artnetLong$p_age_imp <= 24] <- "15-24"
artnetLong$p_age.cat_imp[artnetLong$p_age_imp >= 25 & artnetLong$p_age_imp <= 34] <- "25-34"
artnetLong$p_age.cat_imp[artnetLong$p_age_imp >= 35 & artnetLong$p_age_imp <= 44] <- "35-44"
artnetLong$p_age.cat_imp[artnetLong$p_age_imp >= 45 & artnetLong$p_age_imp <= 54] <- "45-54"
artnetLong$p_age.cat_imp[artnetLong$p_age_imp >= 55 & artnetLong$p_age_imp <= 65] <- "55-65"
artnetLong$p_age.cat_imp[artnetLong$p_age_imp > 65] <- "66+"
# PrEP Use
# PREP_CURRENT PREPCURRENT_AMIS artnetPREP_CURRENT PARTXPREPSTART PARTXPREPUSE PARTXPREPUSE_PART
# Variables for each partner
p1.vars <- select(artnet, AMIS_ID,
ONCE = PART1ONCE,
prep.ever.ego = PREP_REVISED,
prep.during.ego = PART1PREPUSE,
prep.during.ego.start = PART1PREPSTART,
prep.during.part = PART1PREPUSE_PART,
part_hiv = PART1HIV) %>%
mutate(PARTNER_ID = 1)
p2.vars <- select(artnet, AMIS_ID,
ONCE = PART2ONCE,
prep.ever.ego = PREP_REVISED,
prep.during.ego = PART2PREPUSE,
prep.during.ego.start = PART2PREPSTART,
prep.during.part = PART2PREPUSE_PART,
part_hiv = PART2HIV) %>%
mutate(PARTNER_ID = 2)
p3.vars <- select(artnet, AMIS_ID,
ONCE = PART3ONCE,
prep.ever.ego = PREP_REVISED,
prep.during.ego = PART3PREPUSE,
prep.during.ego.start = PART3PREPSTART,
prep.during.part = PART3PREPUSE_PART,
part_hiv = PART3HIV) %>%
mutate(PARTNER_ID = 3)
p4.vars <- select(artnet, AMIS_ID,
ONCE = PART4ONCE,
prep.ever.ego = PREP_REVISED,
prep.during.ego = PART4PREPUSE,
prep.during.ego.start = PART4PREPSTART,
prep.during.part = PART4PREPUSE_PART,
part_hiv = PART4HIV) %>%
mutate(PARTNER_ID = 4)
p5.vars <- select(artnet, AMIS_ID,
ONCE = PART5ONCE,
prep.ever.ego = PREP_REVISED,
prep.during.ego = PART5PREPUSE,
prep.during.ego.start = PART5PREPSTART,
prep.during.part = PART5PREPUSE_PART,
part_hiv = PART5HIV) %>%
mutate(PARTNER_ID = 5)
# Combining all of the datasets
pall.vars <- rbind(p1.vars, p2.vars, p3.vars, p4.vars, p5.vars)
# Dropping observations where ONCE is NA
pall.vars <- pall.vars[which(!is.na(pall.vars$ONCE)),]
# Dropping ONCE from the DF (already in artnetLong)
pall.vars$ONCE <- NULL
# Adding the new partner variables to artnetLong
artnetLong <- inner_join(artnetLong, pall.vars, by = c("AMIS_ID", "PARTNER_ID"))
### Cleaning the crude variables
## Partners' HIV
artnetLong$p_hiv[which(is.na(artnetLong$p_hiv))] <- 2 #  Recoding unknown (NA) partners' hiv as unknown (2)
## Egos' PrEP
# Having trouble with the following line, so I just initialized all values to 2 and then recoded accordingly
# Can't change the NA values for only HIV == 0
# artnetLong$prep.during.ego2[artnetLong$hiv3 == 0 & is.na(artnetLong$prep.during.ego)] <- 2
artnetLong$prep.during.ego2 <- rep(2, nrow(artnetLong))
artnetLong$prep.during.ego2[artnetLong$prep.ever.ego == 0] <- 0 # Recoding Never PrEP as Never During Partnership (was NA)
artnetLong$prep.during.ego2[artnetLong$prep.during.ego == 3] <- 0 # No PrEP during
artnetLong$prep.during.ego2[which(artnetLong$prep.during.ego %in% c(1,2))] <- 1 # Always or Sometimes PrEP
artnetLong$prep.during.ego2[which(artnetLong$prep.during.ego %in% c(88, 99))] <- 2 # Unknown
artnetLong$prep.during.ego2[artnetLong$hiv3 == 1] <- NA # Setting back to NA for HIV-positive
artnetLong$prep.during.ego2[artnetLong$hiv3 == 2] <- NA # Setting back to NA for HIV-unknown
artnetLong$prep.during.ego2[artnetLong$hiv3 == 2 & artnetLong$prep.ever.ego == 0] <- 0 # Unknown HIV but Never used PrEP
artnetLong$prep.during.ego2[artnetLong$hiv3 == 2 & artnetLong$prep.ever.ego == 1] <- 2 # Unknown HIV but HAVE used PrEP before
## Partners' PrEP
# Same issue as above so starting out by initializing all as 2
artnetLong$prep.during.part2 <- rep(2, nrow(artnetLong))
artnetLong$prep.during.part2[artnetLong$prep.during.part == 3] <- 0 # No PrEP during
artnetLong$prep.during.part2[which(artnetLong$prep.during.part %in% c(1,2))] <- 1 # Always or Sometimes PrEP
artnetLong$prep.during.part2[which(artnetLong$prep.during.part %in% c(88, 99))] <- 2 # Unknown
artnetLong$prep.during.part2[artnetLong$p_hiv == 1] <- NA # Setting back to NA for HIV-positive
#### Dyads
#HIV mixing
artnetLong$d_hiv <- NULL
artnetLong$d_hiv[artnetLong$hiv3 == 0 & artnetLong$p_hiv == 0] <- "NEGNEG"
artnetLong$d_hiv[artnetLong$hiv3 == 0 & artnetLong$p_hiv == 1] <- "NEGPOS"
artnetLong$d_hiv[artnetLong$hiv3 == 0 & artnetLong$p_hiv == 2] <- "NEGUNK"
artnetLong$d_hiv[artnetLong$hiv3 == 1 & artnetLong$p_hiv == 0] <- "POSNEG"
artnetLong$d_hiv[artnetLong$hiv3 == 1 & artnetLong$p_hiv == 1] <- "POSPOS"
artnetLong$d_hiv[artnetLong$hiv3 == 1 & artnetLong$p_hiv == 2] <- "POSUNK"
artnetLong$d_hiv[artnetLong$hiv3 == 2 & artnetLong$p_hiv == 0] <- "UNKNEG"
artnetLong$d_hiv[artnetLong$hiv3 == 2 & artnetLong$p_hiv == 1] <- "UNKPOS"
artnetLong$d_hiv[artnetLong$hiv3 == 2 & artnetLong$p_hiv == 2] <- "UNKUNK"
### PREP & HIV mixing ###
artnetLong$d_hivprep <- NULL
## Ego == (-) no PrEP
# Partner == (-) no PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 0 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 0] <- "NOP-NOP"
# Partner == (-) PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 0 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 1] <- "NOP-YEP"
# Partner == (-) PrEP UNK
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 0 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 2] <- "NOP-PUK"
# Partner == (+)
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 0 &
artnetLong$p_hiv == 1] <- "NOP-POS"
# Partner == (?)
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 0 &
artnetLong$p_hiv == 2] <- "NOP-UNK"
## Ego == (-) PrEP
# Partner == (-) no PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 1 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 0] <- "YEP-NOP"
# Partner == (-) PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 1 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 1] <- "YEP-YEP"
# Partner == (-) PrEP UNK
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 1 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 2] <- "YEP-PUK"
# Partner == (+)
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 1 &
artnetLong$p_hiv == 1] <- "YEP-POS"
# Partner == (?)
artnetLong$d_hivprep[artnetLong$hiv3 == 0 &
artnetLong$prep.during.ego2 == 1 &
artnetLong$p_hiv == 2] <- "YEP-UNK"
## Ego == (+)
# Partner == (-) no PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 1 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 0] <- "POS-NOP"
# Partner == (-) PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 1 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 1] <- "POS-YEP"
# Partner == (-) PrEP UNK
artnetLong$d_hivprep[artnetLong$hiv3 == 1 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 2] <- "POS-PUK"
# Partner == (+)
artnetLong$d_hivprep[artnetLong$hiv3 == 1 &
artnetLong$p_hiv == 1] <- "POS-POS"
# Partner == (?)
artnetLong$d_hivprep[artnetLong$hiv3 == 1 &
artnetLong$p_hiv == 2] <- "POS-UNK"
## Ego == (?)
# Partner == (-) no PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 2 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 0] <- "UNK-NOP"
# Partner == (-) PrEP
artnetLong$d_hivprep[artnetLong$hiv3 == 2 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 1] <- "UNK-YEP"
# Partner == (-) PrEP UNK
artnetLong$d_hivprep[artnetLong$hiv3 == 2 &
artnetLong$p_hiv == 0 &
artnetLong$prep.during.part2 == 2] <- "UNK-PUK"
# Partner == (+)
artnetLong$d_hivprep[artnetLong$hiv3 == 2 &
artnetLong$p_hiv == 1] <- "UNK-POS"
# Partner == (?)
artnetLong$d_hivprep[artnetLong$hiv3 == 2 &
artnetLong$p_hiv == 2] <- "UNK-UNK"
#### Changing to factors
#artnetLong$hiv3 = factor(artnetLong$hiv3, labels = c("Neg", "Pos", "Unk"))
artnetLong$p_hiv = factor(artnetLong$p_hiv, labels = c("Neg", "Pos", "Unk"))
artnetLong$prep.during.ego2 = factor(artnetLong$prep.during.ego2, labels = c("No", "Yes", "Unk"))
artnetLong$prep.during.part2 = factor(artnetLong$prep.during.part2, labels = c("No", "Yes", "Unk"))
artnetLong$age.cat = factor(artnetLong$age.cat)
artnetLong$race.cat = factor(artnetLong$race.cat)
artnetLong$p_age.cat_imp = factor(artnetLong$p_age.cat_imp)
artnetLong$p_race.cat = factor(artnetLong$p_race.cat)
artnetLong$hiv3 = factor(artnetLong$hiv3, labels = c("Neg", "Pos", "Unk"))
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
typeof(artnetLong$hiv3)
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# Recoding the 2s as NA
artnetSort1$hiv3[artnetSort1$hiv3 == 2] <- NA
artnetSort1 %>% count(hiv3)
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1 %>% count(hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetSort1 %>% count(hiv3)
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# Adding the imputed hiv3 values
hiv3.egos <- artnetWideSort2 %>% select(AMIS_ID, hiv3)
hiv3.egos <- factor(hiv3.egos$hiv3, labels = c("Neg", "Pos"))
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
artnetSort2 <- left_join(artnetSort1, hiv3.egos, by = "AMIS_ID") %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
# Changing hiv3 to numeric
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetSort1$hiv3[artnetSort1$hiv3 == 2] <- NA
# Adding the imputed hiv3 values
hiv3.egos <- artnetWideSort2 %>% select(AMIS_ID, hiv3)
artnetSort2 <- left_join(artnetSort1, hiv3.egos, by = "AMIS_ID") %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort2 %>% count(hiv3)
View(artnetSort2)
artnetSort2$hiv3.x <- NULL
artnetSort2$hiv3.y <- NULL
artnetSort2 %>% count(p_hiv)
# Recoding the 2s as NA
artnetSort2$p_hiv[artnetSort2$p_hiv == "Unk"] <- NA
artnetSort2 %>% count(p_hiv)
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 + city2,
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
artnetSort1$p_hiv <- as.numeric(artnetSort1$p_hiv)
artnetSort1$p_hiv <- as.numeric(artnetSort1$p_hiv)
artnetSort1 %>% count(p_hiv)
artnetSort1$p_hiv = artnetSort1$p_hiv - 1
artnetSort1$p_hiv[artnetSort1$p_hiv == 2] <- NA
artnetSort1 %>% count(p_hiv)
artnetSort2 <- left_join(artnetSort1, hiv3.egos, by = "AMIS_ID") %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort2$hiv3.x <- NULL
artnetSort2$hiv3.y <- NULL
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 + city2,
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(test)
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
as.factor(ptype) + hiv3 + prep.during.ego2,
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(test)
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
as.factor(ptype) + as.factor(hiv3) + prep.during.ego2,
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(test)
control.compute = list(config = TRUE))
artnetSort1 %>% count(prep.during.ego2)
artnetSort1$prep.during.ego2 <- as.numeric(artnetSort1$prep.during.ego2)
artnetSort1 %>% count(prep.during.ego2)
artnetSort1$prep.during.ego2 = artnetSort1$prep.during.ego2 - 1
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == 2] <- NA
artnetSort1 %>% count(prep.during.ego2)
artnetSort1 %>% count(prep.during.part2)
artnetSort1$prep.during.part2 <- as.numeric(artnetSort1$prep.during.part2)
artnetSort1$prep.during.part2 = artnetSort1$prep.during.part2 - 1
artnetSort1$prep.during.part2[artnetSort1$prep.during.part2 == 2] <- NA
artnetSort1 %>% count(prep.during.part2)
# Changing ptype to factor
artnetSort1$ptype = factor(artnetSort1$ptype,  labels = c("Main", "Casual", "Once"))
artnetSort2 <- left_join(artnetSort1, hiv3.egos, by = "AMIS_ID") %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort2$hiv3.x <- NULL
artnetSort2$hiv3.y <- NULL
View(artnetSort2)
# Recoding ego's PrEP
artnetSort2$prep.during.ego2[artnetSort2$hiv3 == 1] <- 0
artnetSort2$prep.during.ego2[which(is.na(artnetSort2$prep.during.ego2))] <- 0
artnetSort2 %>% count(prep.during.ego2)
artnetSort1 %>% count(prep.during.ego2)
?control.predictor
hiv3.inla <- inla(hiv3 ~ race.cat + age.cat + race.cat:age.cat + city2,
family = "binomial",
data = artnetWideSort1,
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
#### Wide data frame -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to NA
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- NA
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
hiv3.inla <- inla(hiv3 ~ race.cat + age.cat + race.cat:age.cat + city2,
family = "binomial",
data = artnetWideSort1,
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Vector of obs with missing hiv3
hiv3.na <- which(is.na(artnetWideSort1$hiv3))
write.csv(hiv3.pred[[1]]$latent[hiv3.na,], file = "hiv3.pred.csv")
p_hiv.inla.test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))[1:2]
# Prints the posterior dist for each obs
p_hiv.inla.test$summary.fitted.values[p_hiv.na, c("mean", "sd")]
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
n.imp <- 1
p_hiv.pred <- inla.posterior.sample(n.imp, p_hiv.inla.test)
write.csv(p_hiv.pred[[1]]$latent[p_hiv.na,], file = "p_hiv.pred.csv")
artnetSort2["972"]
artnetSort2[972]
artnetSort2$hiv3[972]
artnetSort2$p_race[972]
artnetSort2$p_age.cat_imp[972]
artnetSort2$prep.during.ego2[972]
artnetSort2$race.cat[972]
artnetSort2$age.cat[972]
artnetSort2$ptype[972]
artnetSort2$city2[972]
p_hiv.inla <- inla(p_hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 + hiv3:prep.during.ego2 +
ptype:hiv3:prep.during.ego2,
data = artnetSort2, family = "binomial",
control.predictor = list(compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.inla)
p_hiv.inla <- inla(p_hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2,
data = artnetSort2, family = "binomial",
control.predictor = list(compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.inla)
# Imputation model
p_hiv.inla <- inla(p_hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.inla)
artnetSort2 %>% count(city2)
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))[1:2]
# Prints the posterior dist for each obs
p_hiv.inla.test$summary.fitted.values[p_hiv.na, c("mean", "sd")]
# Prints the posterior dist for each obs
p_hiv.inla$summary.fitted.values[p_hiv.na, c("mean", "sd")]
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
p_hiv.pred <- inla.posterior.sample(n.imp, p_hiv.inla)
write.csv(p_hiv.pred[[1]]$latent[p_hiv.na,], file = "p_hiv.pred.csv")
artnetSort2[11412,]
artnetSort2[11412,]
artnetSort2[4077,]
artnetSort2[13290,]
artnetSort2[14042,]
artnetSort2[14043,]
artnetSort2[5058,]
artnetSort2[5059,]
artnetSort2[5060,]
head(p_hiv.pred[[1]]$latent[p_hiv.na,])
# Truncating values > 0 to 0
p_hiv.pred[[1]]$latent[p_hiv.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort3 <- artnetSort2
artnetSort3$p_hiv[p_hiv.na] <- rbinom(length(p_hiv.na),1,exp(p_hiv.pred[[1]]$latent[p_hiv.na,]))
count(artnetSort2$p_hiv)
artnetSort2 %>% count(p_hiv)
artnetSort3 %>% count(p_hiv)
# No PrEP for HIV+
artnetSort3$prep.during.part2[artnetSort3$p_hiv == 1] <- 0
# Imputation model
prep.part.inla <- inla(prep.during.part2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp + p_hiv +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Imputation model
prep.part.inla <- inla(prep.during.part2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp + p_hiv +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort3, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(prep.part.inla)
artnetSort3 %>% count(p_hiv)
# Imputation model
prep.part.inla <- inla(prep.during.part2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = subset(artnetSort3, p_hiv == 0), family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(prep.part.inla)
# Vector of obs with missing p_hiv
prep.part.na <- which(is.na(artnetSort3$prep.during.part2))[1:2]
# Prints the posterior dist for each obs
prep.part.inla$summary.fitted.values[prep.part.na, c("mean", "sd")]
# Vector of obs with missing p_hiv
prep.part.na <- which(is.na(artnetSort3$prep.during.part2))
prep.part.pred <- inla.posterior.sample(n.imp, prep.part.inla)
write.csv(prep.part.pred[[1]]$latent[prep.part.na,], file = "prep.part.pred.csv")
artnetSort3[1,]
artnetSort3[1,]
artnetSort3[2,]
artnetSort3[3,]
artnetSort3[4,]
artnetSort3[5,]
artnetSort3[6,]
artnetSort3[7,]
artnetSort3[8,]
artnetSort3[7638,]
head(prep.part.pred[[1]]$latent[prep.part.na,])
# Truncating values > 0 to 0
prep.part.pred[[1]]$latent[prep.part.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort4 <- artnetSort3
artnetSort4$prep.during.part2[prep.part.na] <- rbinom(length(prep.part.na),1,exp(prep.part.pred[[1]]$latent[prep.part.na,]))
artnetSort3 %>% count(prep.during.part2)
artnetSort4 %>% count(prep.during.part2)
