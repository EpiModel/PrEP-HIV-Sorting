if (scen == "reclass") {ps.reclass <<- fig2.panel}
}
fig2.panels(scen = "full")
ps.full
fig2.panels(scen = "cc")
fig2.panels(scen = "reclass")
ps.cc
ps.reclass
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,2/3,2/3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
fig2.panels <- function(scen){
if (scen == "full") {
ps.table <- prop.table(table(artnetSort$hp, artnetSort$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP", "HIV unknown"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV", "HIV unknown"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 4)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], ps.table[2,4],
ps.table[1,2], ps.table[1,1], ps.table[1,3], ps.table[1,4],
ps.table[3,2], ps.table[3,1], ps.table[3,3], ps.table[3,4],
ps.table[4,2], ps.table[4,1], ps.table[4,3], ps.table[4,4])
panel.title <- "Ego knowledge"}
if (scen == "cc") {
cc.df <- artnetSort %>% filter(!p_hiv == "Unk" & !prep.during.part2 == "Unk" & !hiv3 == "Unk")
ps.table <- prop.table(table(cc.df$hp, cc.df$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], 0,
ps.table[1,2], ps.table[1,1], ps.table[1,3], 0,
ps.table[3,2], ps.table[3,1], ps.table[3,3], 0)
panel.title <- "Complete-case analysis"}
if (scen == "reclass") {
ps.table <- as.data.frame(results(dat = reclass.results, x = "full.sort.p"))
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[5,2], ps.table[2,2], ps.table[8,2], 0,
ps.table[4,2], ps.table[1,2], ps.table[7,2], 0,
ps.table[6,2], ps.table[3,2], ps.table[9,2], 0)
panel.title <- "Sensitivity analysis"}
ps.df <- data.frame(ego, part, perc)
bar.order <- c("Unknown PrEP", "Ever PrEP", "Never PrEP", "Diagnosed HIV")
fig2.panel <- ggplot(ps.df,
aes(x = ego, y = perc,
fill = factor(part, levels = bar.order))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = subset(ps.df, perc > 0),
aes(label = scales::percent(perc, accuracy = 0.1)),
position = position_stack(vjust = 0.5),
show.legend = FALSE, fill = "white") +
labs(fill = "Alter HIV status and PrEP use",
title = panel.title,
x = "") +
theme(plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_blank(),
text = element_text(size = 12),
legend.position = "right") +
scale_fill_manual(values = c(mycol4[4], mycol4[2], mycol4[1], mycol4[3]))
if (scen == "full") {ps.full <<- fig2.panel}
if (scen == "cc") {ps.cc <<- fig2.panel}
if (scen == "reclass") {ps.reclass <<- fig2.panel}
}
fig2.panels(scen = "full")
fig2.panels(scen = "cc")
fig2.panels(scen = "reclass")
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,2/3,2/3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
ps.full
fig2.panels <- function(scen){
if (scen == "full") {
ps.table <- prop.table(table(artnetSort$hp, artnetSort$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP", "HIV unknown"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV", "HIV unknown"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 4)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], ps.table[2,4],
ps.table[1,2], ps.table[1,1], ps.table[1,3], ps.table[1,4],
ps.table[3,2], ps.table[3,1], ps.table[3,3], ps.table[3,4],
ps.table[4,2], ps.table[4,1], ps.table[4,3], ps.table[4,4])
panel.title <- "Ego knowledge"}
if (scen == "cc") {
cc.df <- artnetSort %>% filter(!p_hiv == "Unk" & !prep.during.part2 == "Unk" & !hiv3 == "Unk")
ps.table <- prop.table(table(cc.df$hp, cc.df$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], 0,
ps.table[1,2], ps.table[1,1], ps.table[1,3], 0,
ps.table[3,2], ps.table[3,1], ps.table[3,3], 0)
panel.title <- "Complete-case analysis"}
if (scen == "reclass") {
ps.table <- as.data.frame(results(dat = reclass.results, x = "full.sort.p"))
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[5,2], ps.table[2,2], ps.table[8,2], 0,
ps.table[4,2], ps.table[1,2], ps.table[7,2], 0,
ps.table[6,2], ps.table[3,2], ps.table[9,2], 0)
panel.title <- "Sensitivity analysis"}
ps.df <- data.frame(ego, part, perc)
bar.order <- c("Unknown PrEP", "Ever PrEP", "Never PrEP", "Diagnosed HIV")
fig2.panel <- ggplot(ps.df,
aes(x = ego, y = perc,
fill = factor(part, levels = bar.order))) +
geom_bar(stat = "identity", width = 0.8) +
scale_y_continuous(labels = scales::percent) +
geom_label(data = subset(ps.df, perc > 0),
aes(label = scales::percent(perc, accuracy = 0.1)),
position = position_stack(vjust = 0.5),
show.legend = FALSE, fill = "white") +
labs(fill = "Alter HIV status and PrEP use",
title = panel.title,
x = "") +
theme(plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_blank(),
text = element_text(size = 12),
legend.position = "right") +
scale_fill_manual(values = c(mycol4[4], mycol4[2], mycol4[1], mycol4[3]))
if (scen == "full") {ps.full <<- fig2.panel}
if (scen == "cc") {ps.cc <<- fig2.panel}
if (scen == "reclass") {ps.reclass <<- fig2.panel}
}
fig2.panels(scen = "full")
fig2.panels(scen = "cc")
fig2.panels(scen = "reclass")
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,2/3,2/3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,1,1),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
fig2.panels <- function(scen){
if (scen == "full") {
ps.table <- prop.table(table(artnetSort$hp, artnetSort$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP", "HIV unknown"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV", "HIV unknown"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 4)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], ps.table[2,4],
ps.table[1,2], ps.table[1,1], ps.table[1,3], ps.table[1,4],
ps.table[3,2], ps.table[3,1], ps.table[3,3], ps.table[3,4],
ps.table[4,2], ps.table[4,1], ps.table[4,3], ps.table[4,4])
panel.title <- "Ego knowledge"}
if (scen == "cc") {
cc.df <- artnetSort %>% filter(!p_hiv == "Unk" & !prep.during.part2 == "Unk" & !hiv3 == "Unk")
ps.table <- prop.table(table(cc.df$hp, cc.df$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], 0,
ps.table[1,2], ps.table[1,1], ps.table[1,3], 0,
ps.table[3,2], ps.table[3,1], ps.table[3,3], 0)
panel.title <- "Complete-case analysis"}
if (scen == "reclass") {
ps.table <- as.data.frame(results(dat = reclass.results, x = "full.sort.p"))
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[5,2], ps.table[2,2], ps.table[8,2], 0,
ps.table[4,2], ps.table[1,2], ps.table[7,2], 0,
ps.table[6,2], ps.table[3,2], ps.table[9,2], 0)
panel.title <- "Sensitivity analysis"}
ps.df <- data.frame(ego, part, perc)
bar.order <- c("Unknown PrEP", "Ever PrEP", "Never PrEP", "Diagnosed HIV")
fig2.panel <- ggplot(ps.df,
aes(x = ego, y = perc,
fill = factor(part, levels = bar.order))) +
geom_bar(stat = "identity", width = 0.75) +
scale_y_continuous(labels = scales::percent) +
geom_label(data = subset(ps.df, perc > 0),
aes(label = scales::percent(perc, accuracy = 0.1)),
position = position_stack(vjust = 0.5),
show.legend = FALSE, fill = "white") +
labs(fill = "Alter HIV status and PrEP use",
title = panel.title,
x = "") +
theme(plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_blank(),
text = element_text(size = 12),
legend.position = "right") +
scale_fill_manual(values = c(mycol4[4], mycol4[2], mycol4[1], mycol4[3]))
if (scen == "full") {ps.full <<- fig2.panel}
if (scen == "cc") {ps.cc <<- fig2.panel}
if (scen == "reclass") {ps.reclass <<- fig2.panel}
}
fig2.panels(scen = "full")
fig2.panels(scen = "cc")
fig2.panels(scen = "reclass")
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,1,1),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,2/3,2/3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
fig2.panels <- function(scen){
if (scen == "full") {
ps.table <- prop.table(table(artnetSort$hp, artnetSort$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP", "HIV unknown"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV", "HIV unknown"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 4)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], ps.table[2,4],
ps.table[1,2], ps.table[1,1], ps.table[1,3], ps.table[1,4],
ps.table[3,2], ps.table[3,1], ps.table[3,3], ps.table[3,4],
ps.table[4,2], ps.table[4,1], ps.table[4,3], ps.table[4,4])
panel.title <- "Ego knowledge"}
if (scen == "cc") {
cc.df <- artnetSort %>% filter(!p_hiv == "Unk" & !prep.during.part2 == "Unk" & !hiv3 == "Unk")
ps.table <- prop.table(table(cc.df$hp, cc.df$p_hp),1)
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[2,2], ps.table[2,1], ps.table[2,3], 0,
ps.table[1,2], ps.table[1,1], ps.table[1,3], 0,
ps.table[3,2], ps.table[3,1], ps.table[3,3], 0)
panel.title <- "Complete-case analysis"}
if (scen == "reclass") {
ps.table <- as.data.frame(results(dat = reclass.results, x = "full.sort.p"))
ego <- factor(rep(c("Diagnosed HIV", "Never PrEP", "PrEP"), each = 4),
levels = c("Never PrEP", "PrEP", "Diagnosed HIV"))
part <- rep(c("Diagnosed HIV", "Never PrEP", "Ever PrEP", "Unknown PrEP"), times = 3)
perc <- c(ps.table[5,2], ps.table[2,2], ps.table[8,2], 0,
ps.table[4,2], ps.table[1,2], ps.table[7,2], 0,
ps.table[6,2], ps.table[3,2], ps.table[9,2], 0)
panel.title <- "Sensitivity analysis"}
ps.df <- data.frame(ego, part, perc)
bar.order <- c("Unknown PrEP", "Ever PrEP", "Never PrEP", "Diagnosed HIV")
fig2.panel <- ggplot(ps.df,
aes(x = ego, y = perc,
fill = factor(part, levels = bar.order))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
geom_label(data = subset(ps.df, perc > 0),
aes(label = scales::percent(perc, accuracy = 0.1)),
position = position_stack(vjust = 0.5),
show.legend = FALSE, fill = "white") +
labs(fill = "Alter HIV status and PrEP use",
title = panel.title,
x = "") +
theme(plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_blank(),
text = element_text(size = 12),
legend.position = "right") +
scale_fill_manual(values = c(mycol4[4], mycol4[2], mycol4[1], mycol4[3]))
if (scen == "full") {ps.full <<- fig2.panel}
if (scen == "cc") {ps.cc <<- fig2.panel}
if (scen == "reclass") {ps.reclass <<- fig2.panel}
}
fig2.panels(scen = "full")
fig2.panels(scen = "cc")
fig2.panels(scen = "reclass")
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(1,2/3,2/3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(4/12,3/12,3/12),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
## Combined plots
(ss.compare <- ggarrange(ss.full, ss.cc, ss.reclass,
ncol = 3, widths = c(1,2/3,2/3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottomleft"))
## Combined plots
(ss.compare <- ggarrange(ss.full, ss.cc, ss.reclass, NA,
ncol = 4, widths = c(4/12,3/12,3/12, 3/12),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
## Combined plots
(ss.compare <- ggarrange(ss.full, ss.cc, ss.reclass,
ncol = 3, widths = c(3/7,2/7,2/7),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
## Combined plots
(ps.compare <- ggarrange(ps.full, ps.cc, ps.reclass,
ncol = 3, widths = c(4,3,3),
labels = c("A","B","C"),
common.legend = TRUE,
legend = "bottom"))
source('~/GitHub/PrEP-HIV-Sorting/1 Data cleaning.R')
table(artnetSort$city2)
source('~/GitHub/PrEP-HIV-Sorting/1 Data cleaning.R')
table(artnetLong$city2)
# Compiling all reclassification dfs to a list
dfs <- vector("list", 300)
for (i in seq_along(1:300)) {
dfs[[i]] <- readRDS(paste("imp", i, ".rds", sep = ""))
}
table(dfs[[1]]$city2)
### Reclassification analysis ----
reclass <- vector("list", 300)
for (i in seq_along(1:300)) {
dfs[[i]] <- dfs[[i]] %>% filter(city2 %in% c("Atlanta"))
dfs[[i]] <- dfs[[i]] %>%
mutate(hiv.prep = ifelse(hiv2 == 1, 1, ifelse(prep.during.ego2 == "No",0,2)),
hiv.prep_p = ifelse(p_hiv.imp == 1, 1, ifelse(prep.imp == 0,0,2)))
# Expected Table Counts for Aim 2
reclass[[i]]$hiv.prep.mix <- table(dfs[[i]]$hiv.prep, dfs[[i]]$hiv.prep_p)
# HIV prevalence
reclass[[i]]$hiv.imp.n <- table(dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.imp.p <- prop.table(table(dfs[[i]]$p_hiv.imp))
# HIV reclassification
reclass[[i]]$hiv.reclass.n <- table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.reclass.p <- prop.table(table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp), 1)
# HIV-HIV sorting
reclass[[i]]$hh.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hh.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp), 1)
# PrEP prevalence, given neg/unk
reclass[[i]]$prep.imp.n <- table(dfs[[i]]$prep.imp)
reclass[[i]]$prep.imp.p <- prop.table(table(dfs[[i]]$prep.imp))
# PrEP reclassification
reclass[[i]]$prep.reclass.n <- table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp)
reclass[[i]]$prep.reclass.p <- prop.table(table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp), 1)
# HIV prevalence among egos, given partner is HIV -/?
reclass[[i]]$ehiv.pneg.n <- table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0])
reclass[[i]]$ehiv.pneg.p <- prop.table(table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0]))
# HIV-PrEP sorting
reclass[[i]]$hp.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp)
reclass[[i]]$hp.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp),1)
# PrEP prevalence among egos, given partner is HIV -/?
reclass[[i]]$eprep.pneg.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0])
reclass[[i]]$eprep.pneg.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0]))
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$pp.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]), 1)
# PrEP-HIV sorting
reclass[[i]]$ph.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$ph.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0]), 1)
}
listVec <- lapply(reclass, c, recursive=TRUE)
reclass.results <- as.data.frame(do.call(rbind, listVec))
results <- function(dat, x) {
q <- select(dat, starts_with(x))
return(t(apply(q, 2, quantile, probs = c(0.025, 0.5, 0.975), na.rm = FALSE)))
}
# # HIV-PrEP Mixing - expected counts for Aim 2
results(dat = reclass.results, x = "hiv.prep.mix")
# # HIV prevalence
# results(dat = reclass.results, x = "hiv.imp.n")
results(dat = reclass.results, x = "hiv.imp.p")
#
# # HIV reclassification
# results(dat = reclass.results, x = "hiv.reclass.n")
results(dat = reclass.results, x = "hiv.reclass.p")
# # HIV-PrEP Mixing - expected counts for Aim 2
results(dat = reclass.results, x = "hiv.prep.mix")
### Reclassification analysis ----
reclass <- vector("list", 300)
for (i in seq_along(1:300)) {
dfs[[i]] <- dfs[[i]] %>% filter(city2 %in% c("Atlanta"))
dfs[[i]] <- dfs[[i]] %>%
mutate(hiv.prep = ifelse(hiv2 == 1, 1, ifelse(prep.during.ego2 == "No",0,2)),
hiv.prep_p = ifelse(p_hiv.imp == 1, 1, ifelse(prep.imp == 0,0,2)))
# Expected Table Counts for Aim 2
reclass[[i]]$hiv.prep.mix <- table(dfs[[i]]$hiv.prep, dfs[[i]]$hiv.prep_p)
# HIV prevalence
reclass[[i]]$hiv.imp.n <- table(dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.imp.p <- prop.table(table(dfs[[i]]$p_hiv.imp))
# HIV reclassification
reclass[[i]]$hiv.reclass.n <- table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.reclass.p <- prop.table(table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp), 1)
# HIV-HIV sorting
reclass[[i]]$hh.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hh.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp), 1)
# PrEP prevalence, given neg/unk
reclass[[i]]$prep.imp.n <- table(dfs[[i]]$prep.imp)
reclass[[i]]$prep.imp.p <- prop.table(table(dfs[[i]]$prep.imp))
# PrEP reclassification
reclass[[i]]$prep.reclass.n <- table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp)
reclass[[i]]$prep.reclass.p <- prop.table(table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp), 1)
# HIV prevalence among egos, given partner is HIV -/?
reclass[[i]]$ehiv.pneg.n <- table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0])
reclass[[i]]$ehiv.pneg.p <- prop.table(table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0]))
# HIV-PrEP sorting
reclass[[i]]$hp.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp)
reclass[[i]]$hp.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp),1)
# PrEP prevalence among egos, given partner is HIV -/?
reclass[[i]]$eprep.pneg.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0])
reclass[[i]]$eprep.pneg.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0]))
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$pp.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]), 1)
# PrEP-HIV sorting
reclass[[i]]$ph.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$ph.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0]), 1)
# Full mixing (HIV+, NP, PrEP) with imputed values
reclass[[i]]$full.sort.n <- table(dfs[[i]]$hp3, dfs[[i]]$p_hp3.imp)
reclass[[i]]$full.sort.p <- prop.table(table(dfs[[i]]$hp3, dfs[[i]]$p_hp3.imp),1)
}
# # Full mixing (HIV+, NP, PrEP) with imputed values
results(dat = reclass.results, x = "full.sort.n")
### Reclassification analysis ----
reclass <- vector("list", 300)
for (i in seq_along(1:300)) {
dfs[[i]] <- dfs[[i]] %>% filter(city2 %in% c("Atlanta"))
dfs[[i]] <- dfs[[i]] %>%
mutate(hiv.prep = ifelse(hiv2 == 1, 1, ifelse(prep.during.ego2 == "No",0,2)),
hiv.prep_p = ifelse(p_hiv.imp == 1, 1, ifelse(prep.imp == 0,0,2)))
# Expected Table Counts for Aim 2
reclass[[i]]$hiv.prep.mix <- table(dfs[[i]]$hiv.prep, dfs[[i]]$hiv.prep_p)
# HIV prevalence
reclass[[i]]$hiv.imp.n <- table(dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.imp.p <- prop.table(table(dfs[[i]]$p_hiv.imp))
# HIV reclassification
reclass[[i]]$hiv.reclass.n <- table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hiv.reclass.p <- prop.table(table(dfs[[i]]$p_hiv, dfs[[i]]$p_hiv.imp), 1)
# HIV-HIV sorting
reclass[[i]]$hh.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp)
reclass[[i]]$hh.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$p_hiv.imp), 1)
# PrEP prevalence, given neg/unk
reclass[[i]]$prep.imp.n <- table(dfs[[i]]$prep.imp)
reclass[[i]]$prep.imp.p <- prop.table(table(dfs[[i]]$prep.imp))
# PrEP reclassification
reclass[[i]]$prep.reclass.n <- table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp)
reclass[[i]]$prep.reclass.p <- prop.table(table(dfs[[i]]$prep.during.part2, dfs[[i]]$prep.imp), 1)
# HIV prevalence among egos, given partner is HIV -/?
reclass[[i]]$ehiv.pneg.n <- table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0])
reclass[[i]]$ehiv.pneg.p <- prop.table(table(dfs[[i]]$hiv2[dfs[[i]]$p_hiv.imp == 0]))
# HIV-PrEP sorting
reclass[[i]]$hp.sort.n <- table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp)
reclass[[i]]$hp.sort.p <- prop.table(table(dfs[[i]]$hiv2, dfs[[i]]$prep.imp),1)
# PrEP prevalence among egos, given partner is HIV -/?
reclass[[i]]$eprep.pneg.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0])
reclass[[i]]$eprep.pneg.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$p_hiv.imp == 0 & dfs[[i]]$hiv2 == 0]))
# PrEP-PrEP sorting
reclass[[i]]$pp.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$pp.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$prep.imp[dfs[[i]]$hiv2 == 0]), 1)
# PrEP-HIV sorting
reclass[[i]]$ph.sort.n <- table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0])
reclass[[i]]$ph.sort.p <- prop.table(table(dfs[[i]]$prep.during.ego2[dfs[[i]]$hiv2 == 0], dfs[[i]]$p_hiv.imp[dfs[[i]]$hiv2 == 0]), 1)
# Ego's HIV & PrEP combined (3 levels: HIV+, PrEP, No PrEP)
dfs[[i]] <- dfs[[i]] %>% mutate(
hp3 = ifelse(hp == "Pos", 1,
ifelse(hp == "PrEP", 2, 0)))
# Partner's imputed HIV & PrEP combined (3 levels: HIV+, PrEP, No PrEP)
dfs[[i]] <- dfs[[i]] %>% mutate(
p_hp3.imp = ifelse(p_hiv.imp == 1, 1,
ifelse(prep.imp == 0, 0, 2)))
# Full mixing (HIV+, NP, PrEP) with imputed values
reclass[[i]]$full.sort.n <- table(dfs[[i]]$hp3, dfs[[i]]$p_hp3.imp)
reclass[[i]]$full.sort.p <- prop.table(table(dfs[[i]]$hp3, dfs[[i]]$p_hp3.imp),1)
}
listVec <- lapply(reclass, c, recursive=TRUE)
reclass.results <- as.data.frame(do.call(rbind, listVec))
results <- function(dat, x) {
q <- select(dat, starts_with(x))
return(t(apply(q, 2, quantile, probs = c(0.025, 0.5, 0.975), na.rm = FALSE)))
}
# # Full mixing (HIV+, NP, PrEP) with imputed values
results(dat = reclass.results, x = "full.sort.n")
results(dat = reclass.results, x = "full.sort.p")
results(dat = reclass.results, x = "full.sort.p")
prop.table(table(dfs[[1]]$hp3, dfs[[1]]$p_hp3.imp),1)
library("ARTnetData")
library("tidyverse")
library("INLA")
source('~/GitHub/PrEP-HIV-Sorting/1 Data cleaning.R')
setwd("C:/Users/kmalon5/Documents/GitHub/PrEP-HIV-Sorting")
source('~/GitHub/PrEP-HIV-Sorting/1 Data cleaning.R')
source('~1 Data cleaning.R')
source('~/1 Data cleaning.R')
source('~C:/Users/kmalon5/Documents/GitHub/PrEP-HIV-Sorting/1 Data cleaning.R')
source('C:/Users/kmalon5/Documents/GitHub/PrEP-HIV-Sorting/1 Data cleaning.R')
library("INLA")
library("tidyverse")
library("ggpubr")
library("viridis")
library("gridExtra")
renv::activate()
renv::init()
library("ARTnetData")
library("tidyverse")
renv::deactivate()
library("ARTnetData")
library("tidyverse")
library("tidyverse")
library("ggpubr")
library("viridis")
library("gridExtra")
library("INLA")
library("tidyverse")
library("ggpubr")
library("viridis")
library("gridExtra")
renv::init()
renv::snapshot()
