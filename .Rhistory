undebug(gee)
options(warn=2)
?gee
help(gee)
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
AMIS_ID, artnetSort4,
family = binomial(link=logit))
typeof(artnetSort4$p_hiv)
typeof(artnetSort1$p_hiv)
typeof(artnetSort4$hiv3)
glm20 <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=logit))
summary(glm20)
typeof(artnetSort4$prep.during.ego2)
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
#### Index imputations -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to NA
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- NA
artnetWideSort1$hiv3 = factor(artnetWideSort1$hiv3, labels = c("Neg", "Pos"))
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
# Setting options for the imputations
ini.egos <- mice(artnetWideSort1, maxit = 0) # Dry run to get default settings
ini.egos$visitSequence # Checking default visit sequence
vis.egos <- 3 # Reordering visit sequence
ini.egos$method # Checking the default method
meth.egos <- c("", "","logreg", "", "") # Setting new methods
ini.egos$predictorMatrix
pred.egos <- ini.egos$predictorMatrix
pred.egos[,] <- 0
pred.egos["hiv3", c("city2", "race.cat", "age.cat")] <- 1
# Imputation model
imp.egos <- mice(artnetWideSort1, m = 1, vis = vis.egos, method = meth.egos, pred = pred.egos)
typeof(artnetSort1$p_hiv)
#### Partners df ----
artnetSort1 <- artnetLong %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
typeof(artnetLong$p_hiv)
artnetLong$hiv3 = factor(artnetLong$hiv3, labels = c("Neg", "Pos", "Unk"))
artnetLong$p_hiv = factor(artnetLong$p_hiv, labels = c("Neg", "Pos", "Unk"))
typeof(artnetLong$p_hiv)
artnetLong %>% count(p_hiv)
# Recoding the 2s as NA which is required by MICE
artnetSort1$hiv3[artnetSort1$hiv3 == "Unk"] <- NA
artnetSort1$p_hiv[artnetSort1$p_hiv == "Unk"] <- NA
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == "Unk"] <- NA
artnetSort1$prep.during.part2[artnetSort1$prep.during.part2 == "Unk"] <- NA
options(warn=0)
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
options(warn = 0)
options(warn = 1)
options(warn = default)
options(warn = DEFAULT)
?options()
options(warn = 1)
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
typeof(artnetLong$p_hiv)
#### Index imputations -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to NA
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- NA
artnetWideSort1$hiv3 = factor(artnetWideSort1$hiv3, labels = c("Neg", "Pos"))
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
# Setting options for the imputations
ini.egos <- mice(artnetWideSort1, maxit = 0) # Dry run to get default settings
ini.egos$visitSequence # Checking default visit sequence
vis.egos <- 3 # Reordering visit sequence
ini.egos$method # Checking the default method
meth.egos <- c("", "","logreg", "", "") # Setting new methods
ini.egos$predictorMatrix
pred.egos <- ini.egos$predictorMatrix
pred.egos[,] <- 0
pred.egos["hiv3", c("city2", "race.cat", "age.cat")] <- 1
# Imputation model
imp.egos <- mice(artnetWideSort1, m = 1, vis = vis.egos, method = meth.egos, pred = pred.egos)
#### Partners df ----
artnetSort1 <- artnetLong %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# Recoding the 2s as NA which is required by MICE
artnetSort1$hiv3[artnetSort1$hiv3 == "Unk"] <- NA
artnetSort1$p_hiv[artnetSort1$p_hiv == "Unk"] <- NA
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == "Unk"] <- NA
artnetSort1$prep.during.part2[artnetSort1$prep.during.part2 == "Unk"] <- NA
# Changing to factor levels
artnetSort1$hiv3 = factor(artnetSort1$hiv3, labels = c("Neg", "Pos"))
artnetSort1$p_hiv = factor(artnetSort1$p_hiv, labels = c("Neg", "Pos"))
artnetSort1$prep.during.ego2 = factor(artnetSort1$prep.during.ego2, labels = c("No", "Yes"))
artnetSort1$prep.during.part2 = factor(artnetSort1$prep.during.part2, labels = c("No", "Yes"))
artnetSort1$ptype = factor(artnetSort1$ptype)
# Imputed egos' HIV and now merging with the long dataset
com.egos1 <- complete(imp.egos, 1)
com.egos2 <- com.egos1 %>% select(AMIS_ID, hiv3)
artnetSort2 <- artnetSort1
artnetSort3 <- left_join(artnetSort2, com.egos2, by = "AMIS_ID")  %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort3$hiv3.x <- NULL
artnetSort3$hiv3.y <- NULL
artnetSort3 %>% count(hiv3)
# Now filtering out guys with NA or "other" as race
artnetSort4 <- artnetSort3 %>% filter(
(p_race.cat == "black" | p_race.cat == "white" | p_race.cat == "hispanic") &
(race.cat == "black" | race.cat == "white" | race.cat == "hispanic"))
# Recoding prep.during.ego2
artnetSort4$prep.during.ego2[artnetSort4$hiv3 == "Pos"] <- "No"
artnetSort4$prep.during.ego2[which(is.na(artnetSort4$prep.during.ego2))] <- "No"
# Now trying with the full racial data but with the recoded prep
# Recoding prep.during.ego2
# m10 converged and is a candidate model
# 10,869 obs, 4073 egos
artnetSort5 <- artnetSort3
artnetSort5$prep.during.ego2[artnetSort5$hiv3 == "Pos"] <- "No"
artnetSort5$prep.during.ego2[which(is.na(artnetSort5$prep.during.ego2))] <- "No"
# Excluding the 66+ partner group, limited racial data
# Does not converge - running out of options
artnetSort6 <- artnetSort3 %>% filter(
(p_race.cat == "black" | p_race.cat == "white" | p_race.cat == "hispanic") &
(race.cat == "black" | race.cat == "white" | race.cat == "hispanic"),
p_age.cat_imp != "66+")
artnetSort6$prep.during.ego2[artnetSort6$hiv3 == "Pos"] <- "No"
artnetSort6$prep.during.ego2[which(is.na(artnetSort6$prep.during.ego2))] <- "No"
glm20 <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=logit))
summary(glm20)
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, id = AMIS_ID,
family = binomial(link=logit))
gee12 <- gee(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:ptype + prep.during.ego2:ptype + city2,
data = artnetSort5, id = AMIS_ID,
family = binomial(link=logit),
na.action = na.omit)
gee12 <- gee(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:ptype + prep.during.ego2:ptype + city2,
data = artnetSort5, id = AMIS_ID,
family = binomial(link=logit))
gee12 <- gee(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
city2,
data = artnetSort5, id = AMIS_ID,
family = binomial(link=logit))
typeof(artnetSort5$p_hiv)
class(artnetSort5$p_hiv)
artnetLong$hiv3 = as.factor(artnetLong$hiv3, labels = c("Neg", "Pos", "Unk"))
artnetLong$hiv3 = as.numeric(factor(artnetLong$hiv3, labels = c("Neg", "Pos", "Unk")))
class(artnetLong$hiv3)
class(artnetLong$p_hiv)
artnetLong %>% count(hiv3)
artnetLong$hiv3 = factor(artnetLong$hiv3, labels = c("Neg", "Pos", "Unk"))
artnetLong %>% count(hiv3)
gee20 <- gee(formula = p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, id = AMIS_ID,
family = binomial(link=logit))
install.packages("geepack")
?geepack
library("geepack")
?geepack
?geese
geese20 <- geese(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, id = AMIS_ID,
family = binomial(link=logit))
artnetSort4 %>% count(p_hiv)
artnetSort4 %>% count(hiv3)
?fct_explicit_na
fct_explicit_na(artnetSort4$p_hiv, na_level = "(Missing)")
artnetSort4 %>% count(p_hiv)
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, id = AMIS_ID,
family = binomial(link=logit))
artnetSort7 <- artnetSort4
artnetSort7$p_hiv = as.numeric(artnetSort7$p_hiv)
class(artnetSort7$p_hiv)
artnetSort7 %>% count(p_hiv)
artnetSort4 %>% count(p_hiv)
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit))
artnetSort7$p_hiv[artnetSort7$p_hiv == 1] <- 0
artnetSort7$p_hiv[artnetSort7$p_hiv == 2] <- 1
artnetSort7 %>% count(p_hiv)
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit))
summary(gee20)
?gee
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit),
corstr = "exchangeable")
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit),
corstr = "exchangeable")
summary(gee20)
gee20 <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit),
corstr = "unstructured")
summary(gee20)
gee20ex <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit),
corstr = "exchangeable")
ss20ex <- getME(gee20ex,c("theta","fixef"))
artnetSort8 <- artnetSort5
artnetSort8$p_hiv = as.numeric(artnetSort8$p_hiv)
artnetSort8$p_hiv[artnetSort8$p_hiv == 1] <- 0
artnetSort8$p_hiv[artnetSort8$p_hiv == 2] <- 1
glmer12n <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort8, family = binomial(link=logit))
ss12n <- getME(glmer12n,c("theta","fixef"))
m12n <- update(glmer12n, start = ss12n,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
summary(m12n)
View(ss12n)
ss12n[["theta"]][["AMIS_ID.(Intercept)"]]
?gee
ss12n <- getME(glmer12n,"fixef")
ss12n
m12n <- update(glmer12n, start = ss12n,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
ss12n <- getME(glmer12n,c("theta","fixef"))
ss12n <- getME(glmer12n,c("theta","fixef"))
ss12n$fixef$ptype3:hiv3Pos
ss12n$fixef
?gee
sumamry(gee20un)
summary(gee20un)
gee20un <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit),
corstr = "unstructured")
gee20ex <- gee(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, id = AMIS_ID,
family = binomial(link=logit),
corstr = "exchangeable")
coef(gee20un)
summary(gee20un)
coef(gee20un)
gee20un.coef <- coef(gee20un)
gee20un.coef
glmer20 <- glmer(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*prep.during.ego2 + hiv3*ptype + prep.during.ego2*ptype +
hiv3*prep.during.ego2*ptype + city2 +
(1 | AMIS_ID),
data = artnetSort4, family = binomial(link=logit))
ss20 <- getME(glmer20,c("theta","fixef"))
ss20
ss20gee <- ss20
ss20gee$theta <- 0
ss20gee
gee20un.coef
ss20gee$fixef <- gee20un.coef
ss20gee
m20gee <- update(glmer20, start = ss20gee,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
m20 <- update(glmer20, start = ss20,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
glmer12 <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort5, family = binomial(link=logit))
ss6 <- getME(glmer12,c("theta","fixef"))
m10 <- update(glmer12, start = ss6,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
m12gee <- update(glmer12, start = ss20gee,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
summary(glmer12)
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
library("lme4")
library("gee")
library("mice")
library("RCurl")
#### Index imputations -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to NA
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- NA
artnetWideSort1$hiv3 = factor(artnetWideSort1$hiv3, labels = c("Neg", "Pos"))
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
# Setting options for the imputations
ini.egos <- mice(artnetWideSort1, maxit = 0) # Dry run to get default settings
ini.egos$visitSequence # Checking default visit sequence
vis.egos <- 3 # Reordering visit sequence
ini.egos$method # Checking the default method
meth.egos <- c("", "","logreg", "", "") # Setting new methods
ini.egos$predictorMatrix
pred.egos <- ini.egos$predictorMatrix
pred.egos[,] <- 0
pred.egos["hiv3", c("city2", "race.cat", "age.cat")] <- 1
# Imputation model
imp.egos <- mice(artnetWideSort1, m = 1, vis = vis.egos, method = meth.egos, pred = pred.egos)
#### Partners df ----
artnetSort1 <- artnetLong %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# Recoding the 2s as NA which is required by MICE
artnetSort1$hiv3[artnetSort1$hiv3 == "Unk"] <- NA
artnetSort1$p_hiv[artnetSort1$p_hiv == "Unk"] <- NA
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == "Unk"] <- NA
artnetSort1$prep.during.part2[artnetSort1$prep.during.part2 == "Unk"] <- NA
# Changing to factor levels
artnetSort1$hiv3 = factor(artnetSort1$hiv3, labels = c("Neg", "Pos"))
artnetSort1$p_hiv = factor(artnetSort1$p_hiv, labels = c("Neg", "Pos"))
artnetSort1$prep.during.ego2 = factor(artnetSort1$prep.during.ego2, labels = c("No", "Yes"))
artnetSort1$prep.during.part2 = factor(artnetSort1$prep.during.part2, labels = c("No", "Yes"))
artnetSort1$ptype = factor(artnetSort1$ptype)
# Imputed egos' HIV and now merging with the long dataset
com.egos1 <- complete(imp.egos, 1)
com.egos2 <- com.egos1 %>% select(AMIS_ID, hiv3)
artnetSort2 <- artnetSort1
artnetSort3 <- left_join(artnetSort2, com.egos2, by = "AMIS_ID")  %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort3$hiv3.x <- NULL
artnetSort3$hiv3.y <- NULL
library("dfoptim")
library("nloptr")
library("optimx")
# Now filtering out guys with NA or "other" as race
artnetSort4 <- artnetSort3 %>% filter(
(p_race.cat == "black" | p_race.cat == "white" | p_race.cat == "hispanic") &
(race.cat == "black" | race.cat == "white" | race.cat == "hispanic"))
# Recoding prep.during.ego2
artnetSort4$prep.during.ego2[artnetSort4$hiv3 == "Pos"] <- "No"
artnetSort4$prep.during.ego2[which(is.na(artnetSort4$prep.during.ego2))] <- "No"
# Now trying with the full racial data but with the recoded prep
# Recoding prep.during.ego2
# m10 converged and is a candidate model
# 10,869 obs, 4073 egos
artnetSort5 <- artnetSort3
artnetSort5$prep.during.ego2[artnetSort5$hiv3 == "Pos"] <- "No"
artnetSort5$prep.during.ego2[which(is.na(artnetSort5$prep.during.ego2))] <- "No"
glmer12 <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort5, family = binomial(link=logit))
ss12 <- getME(glmer12,c("theta","fixef"))
# Excluding the 66+ partner group, limited racial data
# Does not converge - running out of options
artnetSort6 <- artnetSort3 %>% filter(
(p_race.cat == "black" | p_race.cat == "white" | p_race.cat == "hispanic") &
(race.cat == "black" | race.cat == "white" | race.cat == "hispanic"),
p_age.cat_imp != "66+")
artnetSort6$prep.during.ego2[artnetSort6$hiv3 == "Pos"] <- "No"
artnetSort6$prep.during.ego2[which(is.na(artnetSort6$prep.during.ego2))] <- "No"
artnetSort7 <- artnetSort4
artnetSort7$p_hiv = as.numeric(artnetSort7$p_hiv)
artnetSort7$p_hiv[artnetSort7$p_hiv == 1] <- 0
artnetSort7$p_hiv[artnetSort7$p_hiv == 2] <- 1
#gee12 does not work as is, need to change p_hiv to numeric as below
gee12 <- gee(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:ptype + prep.during.ego2:ptype + city2,
data = artnetSort5, id = AMIS_ID,
family = binomial(link=logit),
na.action = na.omit)
#Need to change p_hiv to numeric as below
artnetSort8 <- artnetSort5
artnetSort8$p_hiv = as.numeric(artnetSort8$p_hiv)
artnetSort8$p_hiv[artnetSort8$p_hiv == 1] <- 0
artnetSort8$p_hiv[artnetSort8$p_hiv == 2] <- 1
gee12 <- gee(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:ptype + prep.during.ego2:ptype + city2,
data = artnetSort8, id = AMIS_ID,
family = binomial(link=logit),
na.action = na.omit)
gee12un.coef <- coef(gee12un)
gee12un <- gee(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:ptype + prep.during.ego2:ptype + city2,
data = artnetSort8, id = AMIS_ID,
family = binomial(link=logit),
corstr = "unstructured")
gee12un.coef <- coef(gee12un)
ss12gee <- ss12
ss12 <- getME(glmer12,c("theta","fixef"))
glmer12 <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort5, family = binomial(link=logit))
summary(glmer12)
ss12 <- getME(glmer12,c("theta","fixef"))
summary(gee12un)
gee12un.coef <- coef(gee12un)
ss12gee <- ss12
ss12gee$theta <- 0
ss12gee$fixef <- gee12un.coef
m12gee <- update(glmer12, start = ss20gee,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
m12gee <- update(glmer12, start = ss12gee,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
exp(coef(m12gee))
summary(m12gee)
summary(m12gee)
glm12 <- glm(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:ptype + prep.during.ego2:ptype +
city2, data = artnetSort5, family = binomial(link=logit))
summary(glm12)
glmer12 <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort5, family = binomial(link=logit))
glmer12 <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort5, family = binomial(link=logit))
ss12 <- getME(glmer12,c("theta","fixef"))
m12 <- update(glmer12, start = ss12,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun=2e5)))
summary(m12)
ss12
ss12gee
# Trying a log binomial model
glmer12.log <- glmer(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
hiv3:prep.during.ego2 + hiv3:ptype + prep.during.ego2:ptype +
hiv3:prep.during.ego2:ptype +
city2 + (1 | AMIS_ID),
data = artnetSort5, family = binomial(link=log))
glm20 <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=logit))
glm20 <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=log))
glm20 <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=logit))
glm20.log <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=log))
?glm
options(warn=2)
glm20.log <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=log))
options(warn=1)
glm20.log <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=log))
traceback()
glm20.log <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort7, family = binomial(link=log))
debug(glm)
glm20.log <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=log))
options(warn=2)
glm20.log <- glm(p_hiv ~ ptype + hiv3 + prep.during.ego2 +
hiv3*ptype + prep.during.ego2*ptype + city2,
data = artnetSort4, family = binomial(link=log))
undebug(glm)
options(warn=0)
?inla
?mice
