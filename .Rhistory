#### Wide data frame -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to NA
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- NA
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
hiv3.inla <- inla(hiv3 ~ race.cat + age.cat + race.cat:age.cat + city2,
family = "binomial",
data = artnetWideSort1,
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Vector of obs with missing hiv3
hiv3.na <- which(is.na(artnetWideSort1$hiv3))
write.csv(hiv3.pred[[1]]$latent[hiv3.na,], file = "hiv3.pred.csv")
p_hiv.inla.test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))[1:2]
# Prints the posterior dist for each obs
p_hiv.inla.test$summary.fitted.values[p_hiv.na, c("mean", "sd")]
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
n.imp <- 1
p_hiv.pred <- inla.posterior.sample(n.imp, p_hiv.inla.test)
write.csv(p_hiv.pred[[1]]$latent[p_hiv.na,], file = "p_hiv.pred.csv")
artnetSort2["972"]
artnetSort2[972]
artnetSort2$hiv3[972]
artnetSort2$p_race[972]
artnetSort2$p_age.cat_imp[972]
artnetSort2$prep.during.ego2[972]
artnetSort2$race.cat[972]
artnetSort2$age.cat[972]
artnetSort2$ptype[972]
artnetSort2$city2[972]
p_hiv.inla <- inla(p_hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 + hiv3:prep.during.ego2 +
ptype:hiv3:prep.during.ego2,
data = artnetSort2, family = "binomial",
control.predictor = list(compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.inla)
p_hiv.inla <- inla(p_hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2,
data = artnetSort2, family = "binomial",
control.predictor = list(compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.inla)
# Imputation model
p_hiv.inla <- inla(p_hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.inla)
artnetSort2 %>% count(city2)
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))[1:2]
# Prints the posterior dist for each obs
p_hiv.inla.test$summary.fitted.values[p_hiv.na, c("mean", "sd")]
# Prints the posterior dist for each obs
p_hiv.inla$summary.fitted.values[p_hiv.na, c("mean", "sd")]
# Vector of obs with missing p_hiv
p_hiv.na <- which(is.na(artnetSort2$p_hiv))
p_hiv.pred <- inla.posterior.sample(n.imp, p_hiv.inla)
write.csv(p_hiv.pred[[1]]$latent[p_hiv.na,], file = "p_hiv.pred.csv")
artnetSort2[11412,]
artnetSort2[11412,]
artnetSort2[4077,]
artnetSort2[13290,]
artnetSort2[14042,]
artnetSort2[14043,]
artnetSort2[5058,]
artnetSort2[5059,]
artnetSort2[5060,]
head(p_hiv.pred[[1]]$latent[p_hiv.na,])
# Truncating values > 0 to 0
p_hiv.pred[[1]]$latent[p_hiv.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort3 <- artnetSort2
artnetSort3$p_hiv[p_hiv.na] <- rbinom(length(p_hiv.na),1,exp(p_hiv.pred[[1]]$latent[p_hiv.na,]))
count(artnetSort2$p_hiv)
artnetSort2 %>% count(p_hiv)
artnetSort3 %>% count(p_hiv)
# No PrEP for HIV+
artnetSort3$prep.during.part2[artnetSort3$p_hiv == 1] <- 0
# Imputation model
prep.part.inla <- inla(prep.during.part2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp + p_hiv +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Imputation model
prep.part.inla <- inla(prep.during.part2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp + p_hiv +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort3, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(prep.part.inla)
artnetSort3 %>% count(p_hiv)
# Imputation model
prep.part.inla <- inla(prep.during.part2 ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = subset(artnetSort3, p_hiv == 0), family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(prep.part.inla)
# Vector of obs with missing p_hiv
prep.part.na <- which(is.na(artnetSort3$prep.during.part2))[1:2]
# Prints the posterior dist for each obs
prep.part.inla$summary.fitted.values[prep.part.na, c("mean", "sd")]
# Vector of obs with missing p_hiv
prep.part.na <- which(is.na(artnetSort3$prep.during.part2))
prep.part.pred <- inla.posterior.sample(n.imp, prep.part.inla)
write.csv(prep.part.pred[[1]]$latent[prep.part.na,], file = "prep.part.pred.csv")
artnetSort3[1,]
artnetSort3[1,]
artnetSort3[2,]
artnetSort3[3,]
artnetSort3[4,]
artnetSort3[5,]
artnetSort3[6,]
artnetSort3[7,]
artnetSort3[8,]
artnetSort3[7638,]
head(prep.part.pred[[1]]$latent[prep.part.na,])
# Truncating values > 0 to 0
prep.part.pred[[1]]$latent[prep.part.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort4 <- artnetSort3
artnetSort4$prep.during.part2[prep.part.na] <- rbinom(length(prep.part.na),1,exp(prep.part.pred[[1]]$latent[prep.part.na,]))
artnetSort3 %>% count(prep.during.part2)
artnetSort4 %>% count(prep.during.part2)
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
library("INLA")
#### Wide data frame -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to NA
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- NA
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
# Imputation model
hiv3.inla <- inla(hiv3 ~ race.cat + age.cat + race.cat:age.cat + city2,
family = "binomial",
data = artnetWideSort1,
control.predictor = list(compute = TRUE),
control.compute = list(config = TRUE))
# Vector of obs with missing hiv3
hiv3.na <- which(is.na(artnetWideSort1$hiv3))
n.imp <- 1
# Sampling from the posterior dist
hiv3.pred <- inla.posterior.sample(n.imp, hiv3.inla)
# Truncating values > 0 to 0
hiv3.pred[[1]]$latent[hiv3.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetWideSort2 <- artnetWideSort1
artnetWideSort2$hiv3[hiv3.na] <- rbinom(length(hiv3.na),1,exp(hiv3.pred[[1]]$latent[hiv3.na,]))
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# Changing variables to numeric which is required by INLA for outcome
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetSort1$hiv3[artnetSort1$hiv3 == 2] <- NA
artnetSort1$p_hiv <- as.numeric(artnetSort1$p_hiv)
artnetSort1$p_hiv = artnetSort1$p_hiv - 1
artnetSort1$p_hiv[artnetSort1$p_hiv == 2] <- NA
artnetSort1$prep.during.ego2 <- as.numeric(artnetSort1$prep.during.ego2)
artnetSort1$prep.during.ego2 = artnetSort1$prep.during.ego2 - 1
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == 2] <- NA
artnetSort1$prep.during.part2 <- as.numeric(artnetSort1$prep.during.part2)
artnetSort1$prep.during.part2 = artnetSort1$prep.during.part2 - 1
artnetSort1$prep.during.part2[artnetSort1$prep.during.part2 == 2] <- NA
# Changing ptype to factor
artnetSort1$ptype = factor(artnetSort1$ptype,  labels = c("Main", "Casual", "Once"))
# Adding the imputed hiv3 values
hiv3.egos <- artnetWideSort2 %>% select(AMIS_ID, hiv3)
artnetSort2 <- left_join(artnetSort1, hiv3.egos, by = "AMIS_ID") %>%
mutate(hiv3 = coalesce(hiv3.x, hiv3.y))
artnetSort2$hiv3.x <- NULL
artnetSort2$hiv3.y <- NULL
# Recoding ego's PrEP
artnetSort2$prep.during.ego2[artnetSort2$hiv3 == 1] <- 0
artnetSort2$prep.during.ego2[which(is.na(artnetSort2$prep.during.ego2))] <- 0
# Addign weights
artnetSort2$weights <- NA
artnetSort2$weights[artnetSort2$p_hiv == 0] <- 2
artnetSort2$weights[artnetSort2$p_hiv == 1] <- 4
# Adding weights
artnetSort2$IPW <- NA
artnetSort2$IPW[artnetSort2$p_hiv == 0] <- 2
artnetSort2$IPW[artnetSort2$p_hiv == 1] <- 4
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial", weights = IPW,
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Adding weights
artnetSort2$IPW <- NA
artnetSort2$IPW[artnetSort2$p_hiv == 0] <- 2
artnetSort2$IPW[artnetSort2$p_hiv == 1] <- 4
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial", weights = IPW,
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
test <- inla(p_hiv ~ p_race.cat + p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial", weights = "IPW",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
?inla.setOption
#### Wide data frame -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
rm(list = ls())
source('~/GitHub/PrEP-HIV-Sorting/Data cleaning.R')
library("INLA")
#### Wide data frame -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to 0 (combining neg and unk)
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- 0
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
#### Wide data frame -----
artnetWideSort1 <- artnet %>%
select(AMIS_ID, city2,
hiv3, race.cat, age.cat)
# Changing to factor and 2s to 0 (combining neg and unk)
artnetWideSort1$hiv3[artnetWideSort1$hiv3 == 2] <- 0
artnetWideSort1$age.cat = factor(artnetWideSort1$age.cat)
artnetWideSort1$race.cat = factor(artnetWideSort1$race.cat)
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
artnetWideSort1 %>% count(hiv3)
#### Long data frame ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
artnetSort1 %>% count(p_hiv)
# Changing p_hiv to numeric for INLA
artnetSort1$p_hiv <- as.numeric(artnetSort1$p_hiv)
artnetSort1 %>% count(p_hiv)
artnetSort1$p_hiv = artnetSort1$p_hiv - 1
artnetSort1$p_hiv[artnetSort1$p_hiv == 2] <- NA
artnetSort1 %>% count(p_hiv)
artnetLong %>% count(hiv3)
#### Df initializing ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# hiv3: combining neg and unk
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetLong %>% count(hiv3)
artnetSort1 %>% count(hiv3)
artnetSort1$hiv3[artnetWideSort1$hiv3 == 2] <- 0
#### Df initializing ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# hiv3: combining neg and unk
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1 %>% count(hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetSort1$hiv3[artnetWideSort1$hiv3 == 2] <- 0
# prep: assuming no PrEP for those missing
artnetSort1$prep.during.ego2 <- as.numeric(artnetSort1$prep.during.ego2)
artnetSort1 %>% count(prep.during.ego2)
#### Df initializing ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
artnetSort1 %>% count(prep.during.ego2)
# hiv3: combining neg and unk
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetSort1$hiv3[artnetWideSort1$hiv3 == 2] <- 0
# prep: assuming no PrEP for those missing
artnetSort1$prep.during.ego2 <- as.numeric(artnetSort1$prep.during.ego2)
artnetSort1$prep.during.ego2 = artnetSort1$prep.during.ego2 - 1
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == 2] <- 0
artnetSort2$prep.during.ego2[which(is.na(artnetSort2$prep.during.ego2))] <- 0
artnetSort1$prep.during.ego2[which(is.na(artnetSort1$prep.during.ego2))] <- 0
artnetSort1 %>% count(prep.during.ego2)
# p_hiv: unk set to NA
artnetSort1$p_hiv <- as.numeric(artnetSort1$p_hiv)
artnetSort1$p_hiv = artnetSort1$p_hiv - 1
artnetSort1$p_hiv[artnetSort1$p_hiv == 2] <- NA
#### Df initializing ----
artnetSort1 <- artnetLong %>%
filter(!is.na(p_race.cat)) %>%
select(AMIS_ID, city2, ptype,
hiv3, prep.during.ego2, race.cat, age.cat,
p_hiv, prep.during.part2, p_race.cat, p_age.cat_imp)
# hiv3: combining neg and unk (both 0)
artnetSort1$hiv3 <- as.numeric(artnetSort1$hiv3)
artnetSort1$hiv3 = artnetSort1$hiv3 - 1
artnetSort1$hiv3[artnetWideSort1$hiv3 == 2] <- 0
# prep: assuming no PrEP for those missing
artnetSort1$prep.during.ego2 <- as.numeric(artnetSort1$prep.during.ego2)
artnetSort1$prep.during.ego2 = artnetSort1$prep.during.ego2 - 1
artnetSort1$prep.during.ego2[artnetSort1$prep.during.ego2 == 2] <- 0
artnetSort1$prep.during.ego2[which(is.na(artnetSort1$prep.during.ego2))] <- 0
# Covariates set to factor
artnetSort1$age.cat = factor(artnetSort1$age.cat)
artnetSort1$race.cat = factor(artnetSort1$race.cat)
# p_hiv: unk set to NA
artnetSort1$p_hiv <- as.numeric(artnetSort1$p_hiv)
artnetSort1$p_hiv = artnetSort1$p_hiv - 1
artnetSort1$p_hiv[artnetSort1$p_hiv == 2] <- NA
# prep: unk set to NA
artnetSort1$prep.during.part2 <- as.numeric(artnetSort1$prep.during.part2)
artnetSort1$prep.during.part2 = artnetSort1$prep.during.part2 - 1
artnetSort1$prep.during.part2[artnetSort1$prep.during.part2 == 2] <- NA
# ptype set to factor
artnetSort1$ptype = factor(artnetSort1$ptype,  labels = c("Main", "Casual", "Once"))
artnetSort1 %>% count(p_hiv)
artnetSort1 %>% count(prep.during.part2)
artnetSort1 %>% count(prep.during.ego2)
artnetSort1 %>% count(age.cat)
artnetSort1 %>% count(race.cat)
artnetSort1 %>% count(p_age.cat_imp)
artnetSort1 %>% count(p_race.cat)
artnetSort1 %>% count(ptype)
# Selection indicator
artnetSort1$R <- NA
artnetSort1$R[which(!is.na(artnetSort1$p_hiv))] <- 1
artnetSort1$R[which(is.na(artnetSort1$p_hiv))] <- 0
artnetSort1 %>% count(R)
artnetSort1 %>% count(p_hiv)
# Selection indicator for p_hiv
artnetSort1$R.hiv <- NA
artnetSort1$R.hiv[which(!is.na(artnetSort1$p_hiv))] <- 1
artnetSort1$R.hiv[which(is.na(artnetSort1$p_hiv))] <- 0
# p_hiv disclosure prob
artnetSort1$D.hiv <- NULL
artnetSort1 %>% count(D.hiv)
# p_hiv disclosure prob
artnetSort1$D.hiv <- 0.6
artnetSort1 %>% count(D.hiv)
# selection model
R.hiv.inla <- inla(R.hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
D.hiv:p_hiv + f(AMIS_ID, model = "iid"),
data = artnetSort1, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(R.hiv.inla)
summary(R.hiv.inla)
artnetSort1$test <- artnetSort1$p_hiv * artnetSort1$D.hiv
artnetSort1 %>% count(test)
# selection model
R.hiv.inla <- inla(R.hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
test + f(AMIS_ID, model = "iid"),
data = artnetSort1, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(R.hiv.inla)
summary(R.hiv.inla)
# p_hiv disclosure prob
artnetSort1$D.hiv <- -0.5 #place holder, will need to use literature estimates
artnetSort1$test <- artnetSort1$p_hiv * artnetSort1$D.hiv
# selection model
R.hiv.inla <- inla(R.hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
test + f(AMIS_ID, model = "iid"),
data = artnetSort1, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(R.hiv.inla)
# joint dataset
n <- nrow(artnetSort1)
y <- matrix(NA, nrow = 2 * n, ncol = 2)
y[1:n, 1] <- artnetSort1$p_hiv
y[n + 1:n, 2] <- artnetSort1$R.hiv
View(y)
# Intercepts
I <- matrix(NA, nrow = 2 * n, ncol = 2)
I[1:n, 1] <- 1
I[n + 1:n, 2] <- 1
# Imputation model
R.hiv.inla <- inla(R.hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
# Imputation model
R.hiv.inla <- inla(R.hiv ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + f(AMIS_ID, model = "iid"),
data = artnetSort1, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(R.hiv.inla)
R.hiv.fit <- inla(summary.fitted.values ~ p_hiv, data = R.hiv.inla, family = "binomial")
R.hiv.pred <- R.hiv.inla$summary.fitted.values
?cbind
artnetSort2 <- artnetSort1
artnetSort2$R.hiv.pred <- R.hiv.inla$summary.fitted.values
head(R.hiv.pred, 5)
head(artnetSort2$R.hiv.pred, 5)
artnetSort2 <- artnetSort1
n.imp <- 1
R.hiv.pred <- inla.posterior.sample(n.imp, R.hiv.inla)
head(R.hiv.pred, 5)
n.imp <- 1
R.hiv.pred <- inla.posterior.sample(n.imp, R.hiv.inla)
# Truncating values > 0 to 0
R.hiv.pred[[1]]$latent[R.hiv.pred[[1]]$latent > 0] <- 0
artnetSort2$R.hiv.pred <- rbinom(length(R.hiv.pred),1,exp(R.hiv.pred[[1]]$latent))
head(artnetSort2$R.hiv.pred, 10)
head(artnetSort2$R.hiv.pred, 50)
View(artnetSort2)
p_hiv.obs <- which(!is.na(artnetSort1$p_hiv))
n.imp <- 1
R.hiv.pred <- inla.posterior.sample(n.imp, R.hiv.inla)
# Truncating values > 0 to 0
R.hiv.pred[[1]]$latent[R.hiv.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort2 <- artnetSort1
artnetSort2$R.hiv.pred <- rbinom(length(p_hiv.obs),1,exp(R.hiv.pred[[1]]$latent[p_hiv.obs,]))
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort2 <- artnetSort1
artnetSort2$R.hiv.pred <- rbinom(length(p_hiv.obs),1,exp(R.hiv.pred[[1]]$latent[p_hiv.obs,]))
artnetSort2$R.hiv.pred <- NA
artnetSort2$R.hiv.pred <- rbinom(length(p_hiv.obs),1,exp(R.hiv.pred[[1]]$latent[p_hiv.obs,]))
R.hiv.pred <- inla.posterior.sample(n.imp, R.hiv.inla)
# Truncating values > 0 to 0
R.hiv.pred[[1]]$latent[R.hiv.pred[[1]]$latent > 0] <- 0
# Imputing with random draw of 0 or 1
# p = linear predictor transformed to binomial probability
artnetSort2 <- artnetSort1
artnetSort2$R.hiv.pred <- NA
artnetSort2$R.hiv.pred <- rbinom(length(p_hiv.obs),1,exp(R.hiv.pred[[1]]$latent[p_hiv.obs,]))
artnetSort2$R.hiv.pred <- NA
artnetSort2$R.hiv.pred[p_hiv.obs] <- rbinom(length(p_hiv.obs),1,exp(R.hiv.pred[[1]]$latent[p_hiv.obs,]))
head(artnetSort2$R.hiv.pred, 50)
View(artnetSort2)
artnetSort2 %>% count(R.hiv.pred)
artnetSort2 %>% count(p_hiv)
p_hiv.pred <- inla(R.hiv.pred ~ p_hiv, data = artnetSort2, family = "binomial")
summary(p_hiv.pred)
p_hiv.pred <- inla(R.hiv.pred ~ p_race.cat + p_age.cat_imp + p_race.cat:p_age.cat_imp +
ptype + hiv3 + prep.during.ego2 +
ptype:hiv3 + ptype:prep.during.ego2 +
city2 + p_hiv + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial",
control.predictor = list(link = 1, compute = TRUE),
control.compute = list(config = TRUE))
summary(p_hiv.pred)
artnetSort2 %>% count(R.hiv.pred)
p_hiv.pred <- inla(R.hiv.pred ~ p_hiv + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial")
summary(p_hiv.pred)
artnetSort2$R.hiv.pred[artnetSort2$R.hiv.pred == 0] <- 2
artnetSort2$R.hiv.pred[artnetSort2$R.hiv.pred == 1] <- 0
artnetSort2$R.hiv.pred[artnetSort2$R.hiv.pred == 2] <- 1
p_hiv.pred <- inla(R.hiv.pred ~ p_hiv + f(AMIS_ID, model = "iid"),
data = artnetSort2, family = "binomial")
summary(p_hiv.pred)
summary(p_hiv.pred)
